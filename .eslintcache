[{"/var/www/html/fiverr_frontend/src/reportWebVitals.js":"1","/var/www/html/fiverr_frontend/src/api/request/request.ts":"2","/var/www/html/fiverr_frontend/src/api/request/header.ts":"3","/var/www/html/fiverr_frontend/src/api/config/fetch.config.ts":"4","/var/www/html/fiverr_frontend/src/lib/http/request.ts":"5","/var/www/html/fiverr_frontend/src/lib/http/header/compose.ts":"6","/var/www/html/fiverr_frontend/src/lib/http/header/header.ts":"7","/var/www/html/fiverr_frontend/src/lib/http/mime/mime.ts":"8","/var/www/html/fiverr_frontend/src/lib/http/exception/error.exception.ts":"9","/var/www/html/fiverr_frontend/src/lib/http/exception/http.exception.factory.ts":"10","/var/www/html/fiverr_frontend/src/lib/http/exception/http.exception.ts":"11","/var/www/html/fiverr_frontend/src/api/routing/url.ts":"12","/var/www/html/fiverr_frontend/src/api/config/route.config.ts":"13","/var/www/html/fiverr_frontend/src/lib/location/query.string.ts":"14","/var/www/html/fiverr_frontend/src/index.tsx":"15","/var/www/html/fiverr_frontend/src/store/store.factory.ts":"16","/var/www/html/fiverr_frontend/src/duck/_root/root.reducer.ts":"17","/var/www/html/fiverr_frontend/src/duck/_root/root.saga.ts":"18","/var/www/html/fiverr_frontend/src/duck/entity/entity.middleware.ts":"19","/var/www/html/fiverr_frontend/src/duck/entity/entity.action.ts":"20","/var/www/html/fiverr_frontend/src/duck/app/app.reducer.ts":"21","/var/www/html/fiverr_frontend/src/duck/app/app.saga.ts":"22","/var/www/html/fiverr_frontend/src/duck/app/app.action.ts":"23","/var/www/html/fiverr_frontend/src/duck/app/app.state.ts":"24","/var/www/html/fiverr_frontend/src/duck/entity/entity.reducer.ts":"25","/var/www/html/fiverr_frontend/src/duck/entity/entity.state.ts":"26","/var/www/html/fiverr_frontend/src/duck/entity/entity.model.ts":"27","/var/www/html/fiverr_frontend/src/duck/auth/auth.reducer.ts":"28","/var/www/html/fiverr_frontend/src/duck/auth/auth.action.ts":"29","/var/www/html/fiverr_frontend/src/duck/auth/auth.state.ts":"30","/var/www/html/fiverr_frontend/src/duck/entity/entity.schema.ts":"31","/var/www/html/fiverr_frontend/src/duck/auth/auth.saga.ts":"32","/var/www/html/fiverr_frontend/src/api/api/account/info.ts":"33","/var/www/html/fiverr_frontend/src/api/exception/index.ts":"34","/var/www/html/fiverr_frontend/src/duck/auth/auth.selector.ts":"35","/var/www/html/fiverr_frontend/src/duck/app/app.selector.ts":"36","/var/www/html/fiverr_frontend/src/duck/auth/model/authorized.user.ts":"37","/var/www/html/fiverr_frontend/src/duck/entity/selector/user.account.ts":"38","/var/www/html/fiverr_frontend/src/duck/entity/selector/_entity.ts":"39","/var/www/html/fiverr_frontend/src/duck/auth/hooks/useLogout.ts":"40","/var/www/html/fiverr_frontend/src/api/exception/validation/validation.exception.ts":"41","/var/www/html/fiverr_frontend/src/api/model/media.ts":"42","/var/www/html/fiverr_frontend/src/typings.d.ts":"43","/var/www/html/fiverr_frontend/src/api/exception/validation/validation.exception.factory.ts":"44","/var/www/html/fiverr_frontend/src/api/model/order.ts":"45","/var/www/html/fiverr_frontend/src/lib/currency/currency.ts":"46","/var/www/html/fiverr_frontend/src/app-frontend/app.tsx":"47","/var/www/html/fiverr_frontend/src/app-frontend/containers/main/main.tsx":"48","/var/www/html/fiverr_frontend/src/app-frontend/containers/login/login.tsx":"49","/var/www/html/fiverr_frontend/src/app-frontend/containers/search/search.tsx":"50","/var/www/html/fiverr_frontend/src/app-frontend/containers/signup/signup.tsx":"51","/var/www/html/fiverr_frontend/src/app-frontend/containers/dashboard/dashboard.tsx":"52","/var/www/html/fiverr_frontend/src/app-frontend/containers/service/service.tsx":"53","/var/www/html/fiverr_frontend/src/app-frontend/containers/dashboard/inbox.tsx":"54","/var/www/html/fiverr_frontend/src/app-frontend/containers/dashboard/earnings.tsx":"55","/var/www/html/fiverr_frontend/src/app-frontend/containers/dashboard/payments.tsx":"56","/var/www/html/fiverr_frontend/src/app-frontend/containers/dashboard/order/orders.tsx":"57","/var/www/html/fiverr_frontend/src/app-frontend/containers/dashboard/order/order.tsx":"58","/var/www/html/fiverr_frontend/src/app-frontend/containers/dashboard/order/payment.tsx":"59","/var/www/html/fiverr_frontend/src/app-frontend/containers/dashboard/order/paypal.confirm.tsx":"60","/var/www/html/fiverr_frontend/src/app-frontend/containers/dashboard/profile/profile.tsx":"61","/var/www/html/fiverr_frontend/src/app-frontend/containers/dashboard/order/paypal.payment.tsx":"62","/var/www/html/fiverr_frontend/src/app-frontend/containers/dashboard/order/stripe.payment.tsx":"63","/var/www/html/fiverr_frontend/src/app-frontend/containers/categories/categories.tsx":"64","/var/www/html/fiverr_frontend/src/app-frontend/containers/sellers/sellers.tsx":"65","/var/www/html/fiverr_frontend/src/app-frontend/containers/services/services.tsx":"66","/var/www/html/fiverr_frontend/src/app-frontend/containers/layout/layout.tsx":"67","/var/www/html/fiverr_frontend/src/app-frontend/components/service/service.tsx":"68","/var/www/html/fiverr_frontend/src/app-frontend/components/service/service.short.tsx":"69","/var/www/html/fiverr_frontend/src/app-frontend/components/offer/offer.tsx":"70","/var/www/html/fiverr_frontend/src/app-frontend/components/search/search.tsx":"71","/var/www/html/fiverr_frontend/src/app-frontend/containers/layout/navbar.tsx":"72","/var/www/html/fiverr_frontend/src/app-frontend/components/seller/seller.tsx":"73","/var/www/html/fiverr_frontend/src/app-frontend/routes/frontend.routes.ts":"74","/var/www/html/fiverr_frontend/src/app-frontend/containers/dashboard/services/list.tsx":"75","/var/www/html/fiverr_frontend/src/app-frontend/containers/dashboard/services/create.tsx":"76","/var/www/html/fiverr_frontend/src/app-frontend/containers/dashboard/services/form.tsx":"77","/var/www/html/fiverr_frontend/src/lib/error/error.tsx":"78","/var/www/html/fiverr_frontend/src/app-frontend/containers/dashboard/services/package.tsx":"79","/var/www/html/fiverr_frontend/src/app-frontend/containers/dashboard/services/package.lines.tsx":"80","/var/www/html/fiverr_frontend/src/app-frontend/containers/dashboard/services/edit.tsx":"81","/var/www/html/fiverr_frontend/src/app-admin/app.tsx":"82","/var/www/html/fiverr_frontend/src/app-admin/routes/frontend.routes.ts":"83","/var/www/html/fiverr_frontend/src/app-admin/containers/login/login.tsx":"84","/var/www/html/fiverr_frontend/src/app-admin/containers/dashboard/dashboard.tsx":"85","/var/www/html/fiverr_frontend/src/app-admin/containers/dashboard/payments.tsx":"86","/var/www/html/fiverr_frontend/src/app-admin/containers/dashboard/earnings.tsx":"87","/var/www/html/fiverr_frontend/src/app-admin/containers/dashboard/profile/profile.tsx":"88","/var/www/html/fiverr_frontend/src/app-admin/containers/layout/layout.tsx":"89","/var/www/html/fiverr_frontend/src/app-admin/containers/layout/navbar.tsx":"90","/var/www/html/fiverr_frontend/src/api/routing/routes/backend.app.ts":"91","/var/www/html/fiverr_frontend/src/app-common/components/upload/file.uploader.tsx":"92","/var/www/html/fiverr_frontend/src/app-common/components/image/image.tsx":"93","/var/www/html/fiverr_frontend/src/api/routing/routes/backend.admin.ts":"94","/var/www/html/fiverr_frontend/src/app-admin/containers/dashboard/orders/list.tsx":"95","/var/www/html/fiverr_frontend/src/app-admin/containers/dashboard/users/list.tsx":"96","/var/www/html/fiverr_frontend/src/app-admin/containers/dashboard/featured/list.tsx":"97"},{"size":362,"mtime":1609683422261,"results":"98","hashOfConfig":"99"},{"size":988,"mtime":1621348465341,"results":"100","hashOfConfig":"99"},{"size":297,"mtime":1597315550000,"results":"101","hashOfConfig":"99"},{"size":88,"mtime":1597315550000,"results":"102","hashOfConfig":"99"},{"size":543,"mtime":1597315556000,"results":"103","hashOfConfig":"99"},{"size":330,"mtime":1597315556000,"results":"104","hashOfConfig":"99"},{"size":203,"mtime":1597315556000,"results":"105","hashOfConfig":"99"},{"size":100,"mtime":1598871471000,"results":"106","hashOfConfig":"99"},{"size":90,"mtime":1597315556000,"results":"107","hashOfConfig":"99"},{"size":1205,"mtime":1597315556000,"results":"108","hashOfConfig":"99"},{"size":1604,"mtime":1613120144132,"results":"109","hashOfConfig":"99"},{"size":119,"mtime":1597315550000,"results":"110","hashOfConfig":"99"},{"size":79,"mtime":1597315550000,"results":"111","hashOfConfig":"99"},{"size":471,"mtime":1619992938075,"results":"112","hashOfConfig":"99"},{"size":892,"mtime":1627118663604,"results":"113","hashOfConfig":"99"},{"size":885,"mtime":1621148087564,"results":"114","hashOfConfig":"99"},{"size":376,"mtime":1621148541440,"results":"115","hashOfConfig":"99"},{"size":158,"mtime":1597315555000,"results":"116","hashOfConfig":"99"},{"size":810,"mtime":1598871471000,"results":"117","hashOfConfig":"99"},{"size":670,"mtime":1597315554000,"results":"118","hashOfConfig":"99"},{"size":500,"mtime":1597315555000,"results":"119","hashOfConfig":"99"},{"size":527,"mtime":1621238611954,"results":"120","hashOfConfig":"99"},{"size":228,"mtime":1597315555000,"results":"121","hashOfConfig":"99"},{"size":150,"mtime":1597315555000,"results":"122","hashOfConfig":"99"},{"size":1069,"mtime":1597315554000,"results":"123","hashOfConfig":"99"},{"size":146,"mtime":1597315554000,"results":"124","hashOfConfig":"99"},{"size":75,"mtime":1597315554000,"results":"125","hashOfConfig":"99"},{"size":558,"mtime":1597315554000,"results":"126","hashOfConfig":"99"},{"size":688,"mtime":1621241189690,"results":"127","hashOfConfig":"99"},{"size":150,"mtime":1597315554000,"results":"128","hashOfConfig":"99"},{"size":106,"mtime":1621328178764,"results":"129","hashOfConfig":"99"},{"size":1119,"mtime":1627052070662,"results":"130","hashOfConfig":"99"},{"size":871,"mtime":1627052930886,"results":"131","hashOfConfig":"99"},{"size":56,"mtime":1597315550000,"results":"132","hashOfConfig":"99"},{"size":857,"mtime":1621792269979,"results":"133","hashOfConfig":"99"},{"size":424,"mtime":1597315555000,"results":"134","hashOfConfig":"99"},{"size":218,"mtime":1621327842372,"results":"135","hashOfConfig":"99"},{"size":371,"mtime":1621328092452,"results":"136","hashOfConfig":"99"},{"size":770,"mtime":1621328025880,"results":"137","hashOfConfig":"99"},{"size":913,"mtime":1627052070650,"results":"138","hashOfConfig":"99"},{"size":640,"mtime":1621791075575,"results":"139","hashOfConfig":"99"},{"size":169,"mtime":1620479057159,"results":"140","hashOfConfig":"99"},{"size":28,"mtime":1626321576508,"results":"141","hashOfConfig":"99"},{"size":657,"mtime":1620025671220,"results":"142","hashOfConfig":"99"},{"size":665,"mtime":1626335687987,"results":"143","hashOfConfig":"99"},{"size":68,"mtime":1625940106656,"results":"144","hashOfConfig":"99"},{"size":5303,"mtime":1627048326085,"results":"145","hashOfConfig":"99"},{"size":514,"mtime":1625123675862,"results":"146","hashOfConfig":"99"},{"size":2579,"mtime":1627114600980,"results":"147","hashOfConfig":"99"},{"size":2754,"mtime":1627052016853,"results":"148","hashOfConfig":"99"},{"size":2654,"mtime":1627052016809,"results":"149","hashOfConfig":"99"},{"size":260,"mtime":1621787990511,"results":"150","hashOfConfig":"99"},{"size":9294,"mtime":1627052890942,"results":"151","hashOfConfig":"99"},{"size":15960,"mtime":1627052688066,"results":"152","hashOfConfig":"99"},{"size":256,"mtime":1621789573007,"results":"153","hashOfConfig":"99"},{"size":265,"mtime":1625647266495,"results":"154","hashOfConfig":"99"},{"size":2528,"mtime":1627051688913,"results":"155","hashOfConfig":"99"},{"size":10646,"mtime":1627051688893,"results":"156","hashOfConfig":"99"},{"size":2756,"mtime":1627051688881,"results":"157","hashOfConfig":"99"},{"size":1730,"mtime":1627051688921,"results":"158","hashOfConfig":"99"},{"size":7082,"mtime":1627052857438,"results":"159","hashOfConfig":"99"},{"size":952,"mtime":1627051688929,"results":"160","hashOfConfig":"99"},{"size":2513,"mtime":1626322260656,"results":"161","hashOfConfig":"99"},{"size":973,"mtime":1627051688885,"results":"162","hashOfConfig":"99"},{"size":1074,"mtime":1621788773507,"results":"163","hashOfConfig":"99"},{"size":2053,"mtime":1627052016821,"results":"164","hashOfConfig":"99"},{"size":591,"mtime":1625123627054,"results":"165","hashOfConfig":"99"},{"size":968,"mtime":1626322328748,"results":"166","hashOfConfig":"99"},{"size":1169,"mtime":1627053518166,"results":"167","hashOfConfig":"99"},{"size":3604,"mtime":1627051688873,"results":"168","hashOfConfig":"99"},{"size":1200,"mtime":1626322594116,"results":"169","hashOfConfig":"99"},{"size":2866,"mtime":1627052872102,"results":"170","hashOfConfig":"99"},{"size":737,"mtime":1626322315804,"results":"171","hashOfConfig":"99"},{"size":1263,"mtime":1627035693893,"results":"172","hashOfConfig":"99"},{"size":2662,"mtime":1627052016741,"results":"173","hashOfConfig":"99"},{"size":2248,"mtime":1627052016773,"results":"174","hashOfConfig":"99"},{"size":5023,"mtime":1627052688054,"results":"175","hashOfConfig":"99"},{"size":408,"mtime":1626501919884,"results":"176","hashOfConfig":"99"},{"size":4067,"mtime":1627028325324,"results":"177","hashOfConfig":"99"},{"size":2830,"mtime":1627037406381,"results":"178","hashOfConfig":"99"},{"size":2822,"mtime":1627052016829,"results":"179","hashOfConfig":"99"},{"size":3385,"mtime":1627118090740,"results":"180","hashOfConfig":"99"},{"size":613,"mtime":1627117989164,"results":"181","hashOfConfig":"99"},{"size":2582,"mtime":1627111378212,"results":"182","hashOfConfig":"99"},{"size":260,"mtime":1621787990511,"results":"183","hashOfConfig":"99"},{"size":265,"mtime":1625647266495,"results":"184","hashOfConfig":"99"},{"size":256,"mtime":1621789573007,"results":"185","hashOfConfig":"99"},{"size":4703,"mtime":1627116794492,"results":"186","hashOfConfig":"99"},{"size":591,"mtime":1625123627054,"results":"187","hashOfConfig":"99"},{"size":2317,"mtime":1627118619480,"results":"188","hashOfConfig":"99"},{"size":2229,"mtime":1627051688805,"results":"189","hashOfConfig":"99"},{"size":3314,"mtime":1627051688869,"results":"190","hashOfConfig":"99"},{"size":1076,"mtime":1627051688861,"results":"191","hashOfConfig":"99"},{"size":580,"mtime":1627117486080,"results":"192","hashOfConfig":"99"},{"size":2539,"mtime":1627117748916,"results":"193","hashOfConfig":"99"},{"size":1989,"mtime":1627117726040,"results":"194","hashOfConfig":"99"},{"size":394,"mtime":1627118754240,"results":"195","hashOfConfig":"99"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},"iua207",{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"201"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"201"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"201"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"201"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"201"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"201"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"201"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"201"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"201"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"201"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"201"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"201"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"201"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"201"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"201"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"201"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"201"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"201"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"201"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"201"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"201"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"201"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"201"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"201"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"201"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"201"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"201"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"201"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"201"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"201"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"201"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"201"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"201"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"201"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"201"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"201"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"201"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"201"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"282"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"285","usedDeprecatedRules":"201"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"201"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"201"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"201"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"294","usedDeprecatedRules":"201"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"201"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"299","messages":"300","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"301","usedDeprecatedRules":"201"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"304","usedDeprecatedRules":"201"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"201"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"309","messages":"310","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"311","usedDeprecatedRules":"201"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"201"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"201"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"201"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"320","usedDeprecatedRules":"201"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"323","usedDeprecatedRules":"201"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"326","usedDeprecatedRules":"201"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"329","messages":"330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"201"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"333","usedDeprecatedRules":"201"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"336","usedDeprecatedRules":"201"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"201"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"201"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"201"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"201"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"347","messages":"348","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"201"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"351","usedDeprecatedRules":"201"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"354","messages":"355","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"201"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"201"},{"filePath":"358","messages":"359","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"201"},{"filePath":"360","messages":"361","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"201"},{"filePath":"362","messages":"363","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"364","usedDeprecatedRules":"201"},{"filePath":"365","messages":"366","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"201"},{"filePath":"367","messages":"368","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"201"},{"filePath":"369","messages":"370","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"201"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"373","usedDeprecatedRules":"201"},{"filePath":"374","messages":"375","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"376","messages":"377","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"378","messages":"379","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"380","messages":"381","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"201"},{"filePath":"382","messages":"383","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"384"},{"filePath":"385","messages":"386","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"384"},{"filePath":"387","messages":"388","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"389","messages":"390","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"201"},{"filePath":"391","messages":"392","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"393","messages":"394","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"201"},{"filePath":"395","messages":"396","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"397","usedDeprecatedRules":"201"},{"filePath":"398","messages":"399","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"400","usedDeprecatedRules":"201"},{"filePath":"401","messages":"402","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"403","messages":"404","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"405","messages":"406","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"407","messages":"408","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/var/www/html/fiverr_frontend/src/reportWebVitals.js",[],["409","410"],"/var/www/html/fiverr_frontend/src/api/request/request.ts",[],["411","412"],"/var/www/html/fiverr_frontend/src/api/request/header.ts",[],"/var/www/html/fiverr_frontend/src/api/config/fetch.config.ts",[],"/var/www/html/fiverr_frontend/src/lib/http/request.ts",[],"/var/www/html/fiverr_frontend/src/lib/http/header/compose.ts",[],"/var/www/html/fiverr_frontend/src/lib/http/header/header.ts",[],"/var/www/html/fiverr_frontend/src/lib/http/mime/mime.ts",[],"/var/www/html/fiverr_frontend/src/lib/http/exception/error.exception.ts",[],"/var/www/html/fiverr_frontend/src/lib/http/exception/http.exception.factory.ts",[],"/var/www/html/fiverr_frontend/src/lib/http/exception/http.exception.ts",[],"/var/www/html/fiverr_frontend/src/api/routing/url.ts",[],"/var/www/html/fiverr_frontend/src/api/config/route.config.ts",[],"/var/www/html/fiverr_frontend/src/lib/location/query.string.ts",[],"/var/www/html/fiverr_frontend/src/index.tsx",[],"/var/www/html/fiverr_frontend/src/store/store.factory.ts",[],"/var/www/html/fiverr_frontend/src/duck/_root/root.reducer.ts",[],"/var/www/html/fiverr_frontend/src/duck/_root/root.saga.ts",[],"/var/www/html/fiverr_frontend/src/duck/entity/entity.middleware.ts",[],"/var/www/html/fiverr_frontend/src/duck/entity/entity.action.ts",[],"/var/www/html/fiverr_frontend/src/duck/app/app.reducer.ts",[],"/var/www/html/fiverr_frontend/src/duck/app/app.saga.ts",[],"/var/www/html/fiverr_frontend/src/duck/app/app.action.ts",[],"/var/www/html/fiverr_frontend/src/duck/app/app.state.ts",[],"/var/www/html/fiverr_frontend/src/duck/entity/entity.reducer.ts",[],"/var/www/html/fiverr_frontend/src/duck/entity/entity.state.ts",[],"/var/www/html/fiverr_frontend/src/duck/entity/entity.model.ts",[],"/var/www/html/fiverr_frontend/src/duck/auth/auth.reducer.ts",[],"/var/www/html/fiverr_frontend/src/duck/auth/auth.action.ts",[],"/var/www/html/fiverr_frontend/src/duck/auth/auth.state.ts",[],"/var/www/html/fiverr_frontend/src/duck/entity/entity.schema.ts",[],"/var/www/html/fiverr_frontend/src/duck/auth/auth.saga.ts",[],"/var/www/html/fiverr_frontend/src/api/api/account/info.ts",[],"/var/www/html/fiverr_frontend/src/api/exception/index.ts",[],"/var/www/html/fiverr_frontend/src/duck/auth/auth.selector.ts",[],"/var/www/html/fiverr_frontend/src/duck/app/app.selector.ts",[],"/var/www/html/fiverr_frontend/src/duck/auth/model/authorized.user.ts",[],"/var/www/html/fiverr_frontend/src/duck/entity/selector/user.account.ts",[],"/var/www/html/fiverr_frontend/src/duck/entity/selector/_entity.ts",[],"/var/www/html/fiverr_frontend/src/duck/auth/hooks/useLogout.ts",[],"/var/www/html/fiverr_frontend/src/api/exception/validation/validation.exception.ts",[],"/var/www/html/fiverr_frontend/src/api/model/media.ts",[],["413","414"],"/var/www/html/fiverr_frontend/src/typings.d.ts",["415"],"import React from 'react';\n\n","/var/www/html/fiverr_frontend/src/api/exception/validation/validation.exception.factory.ts",[],"/var/www/html/fiverr_frontend/src/api/model/order.ts",[],"/var/www/html/fiverr_frontend/src/lib/currency/currency.ts",[],"/var/www/html/fiverr_frontend/src/app-frontend/app.tsx",["416","417"],"import './app.css';\nimport Main from './containers/main/main';\nimport Login from './containers/login/login';\nimport Signup from './containers/signup/signup';\nimport {BrowserRouter as Router, Route, Switch,} from \"react-router-dom\";\nimport {\n  DASHBOARD,\n  EARNINGS,\n  HOMEPAGE,\n  INBOX,\n  LOGIN, ORDER_PAYMENT,\n  ORDERS,\n  SEARCH_ROUTE,\n  SERVICE_ROUTE,\n  SIGNUP,\n  SINGLE_MESSAGE, SINGLE_ORDER, PROFILE, SERVICES, PAYMENTS, CONFIRM_PAYPAL_PAYMENT, CREATE_SERVICE, SINGLE_SERVICE\n} from \"./routes/frontend.routes\";\nimport Search from \"./containers/search/search\";\nimport {Service} from \"./containers/service/service\";\nimport {connect} from \"react-redux\";\nimport {RootState} from \"../duck/_root/root.state\";\nimport {isUserLoggedIn} from \"../duck/auth/auth.selector\";\nimport {getBootstrapError, hasBootstrapped} from \"../duck/app/app.selector\";\nimport {bootstrap} from \"../duck/app/app.action\";\nimport {userLoggedOut} from \"../duck/auth/auth.action\";\nimport {bindActionCreators, Dispatch} from 'redux';\nimport {FunctionComponent, useEffect} from \"react\";\nimport {Redirect} from \"react-router\";\nimport {Dashboard} from \"./containers/dashboard/dashboard\";\nimport {Inbox} from \"./containers/dashboard/inbox\";\nimport {Orders} from \"./containers/dashboard/order/orders\";\nimport {Earnings} from \"./containers/dashboard/earnings\";\nimport {QueryString} from \"../lib/location/query.string\";\nimport {useLogout} from \"../duck/auth/hooks/useLogout\";\nimport {Order} from \"./containers/dashboard/order/order\";\nimport {OrderPayment} from \"./containers/dashboard/order/payment\";\nimport {Profile} from \"./containers/dashboard/profile/profile\";\nimport {ServicesComponent} from \"./containers/dashboard/services/list\";\nimport {Payments} from \"./containers/dashboard/payments\";\nimport {PaypalConfirm} from \"./containers/dashboard/order/paypal.confirm\";\nimport {CreateService} from \"./containers/dashboard/services/create\";\nimport {EditService} from \"./containers/dashboard/services/edit\";\n\nexport interface AppProps {\n  bootstrap: () => void;\n  userLoggedOut: () => void;\n  isLoggedIn?: boolean;\n  hasBootstrapped?: boolean;\n  bootstrapError?: Error;\n}\n\n\nconst AppComponent: FunctionComponent<AppProps> = (props) => {\n  \n  const [logoutState, logoutAction] = useLogout();\n  \n  useEffect(() => {\n    props.bootstrap();\n    function handleException(){\n      logoutAction();\n    }\n    window.addEventListener('unhandledrejection', handleException);\n    \n    return () => window.removeEventListener('unhandledrejection', handleException);\n  }, []);\n  \n  const {isLoggedIn, hasBootstrapped, bootstrapError} = props;\n  \n  if (!!bootstrapError) {\n    return <div>An error occurred while initializing application</div>;\n  }\n  \n  if (!hasBootstrapped) {\n    return null;\n  }\n  \n  return (\n    <Router>\n      <Switch>\n        <Route path={HOMEPAGE} exact render={(props) => <Main/>}/>\n        <Route path={SEARCH_ROUTE} render={(props) => <Search/>}/>\n        <Route path={SERVICE_ROUTE} render={(props) => <Service {...props} />}/>\n        <Route path={LOGIN} render={(props) => {\n          let queryString = QueryString.parse(props.location.search);\n          let ref = queryString.ref as any;\n          return (\n            isLoggedIn ? (\n              <Redirect to={ref || DASHBOARD} />\n            ) : (\n              <Login/>\n            )\n          );\n        }}/>\n        <Route path={SIGNUP} render={(props) => <Signup/>}/>\n  \n        <Route path={DASHBOARD + '*'} exact render={({match}) => (\n          <>\n            {isLoggedIn ? (\n              <Switch>\n                <Route path={DASHBOARD} exact render={() => <Dashboard/>} />\n                <Route path={INBOX} exact render={(routeProps) => <Inbox {...routeProps} />} />\n                <Route path={SINGLE_MESSAGE} render={(routeProps) => <Inbox {...routeProps} />} />\n                <Route path={ORDERS} exact render={(routeProps) => <Orders {...routeProps}/>} />\n                <Route path={ORDER_PAYMENT} exact render={(routeProps) => <OrderPayment {...routeProps}/>} />\n                <Route path={SINGLE_ORDER} exact render={(routeProps) => <Order {...routeProps}/>} />\n                <Route path={CONFIRM_PAYPAL_PAYMENT} exact render={(routeProps) => <PaypalConfirm {...routeProps}/>}/>\n                <Route path={EARNINGS} exact render={() => <Earnings/>} />\n                <Route path={PAYMENTS} exact render={() => <Payments/>} />\n                <Route path={PROFILE} exact render={() => <Profile />} />\n                \n                <Route path={SERVICES} exact render={() => <ServicesComponent />} />\n                <Route path={CREATE_SERVICE} exact render={() => <CreateService />} />\n                <Route path={SINGLE_SERVICE} exact render={(props) => <EditService {...props} />} />\n                \n              </Switch>\n            ) : (\n              <Redirect to={LOGIN+'?ref='+match.url} />\n            )}\n          </>\n        )} />\n        \n      </Switch>\n    </Router>\n  );\n};\n\nexport const App = connect(\n  (state: RootState) => ({\n    isLoggedIn: isUserLoggedIn(state),\n    hasBootstrapped: hasBootstrapped(state),\n    bootstrapError: getBootstrapError(state),\n  }),\n  (dispatch: Dispatch) =>\n    bindActionCreators(\n      {\n        bootstrap: bootstrap,\n        userLoggedOut,\n      },\n      dispatch\n    )\n)(AppComponent);\n","/var/www/html/fiverr_frontend/src/app-frontend/containers/main/main.tsx",[],"/var/www/html/fiverr_frontend/src/app-frontend/containers/login/login.tsx",["418"],"/var/www/html/fiverr_frontend/src/app-frontend/containers/search/search.tsx",["419"],"import React, {FunctionComponent, useEffect, useMemo, useState} from \"react\";\nimport Layout from \"../layout/layout\";\nimport {jsonRequest} from \"../../../api/request/request\";\nimport {SERVICES_LIST} from \"../../../api/routing/routes/dashboard\";\nimport {Col, Row} from \"reactstrap\";\nimport Categories from \"../categories/categories\";\nimport Service from \"../../components/service/service\";\nimport {Service as ServiceModel} from '../../../api/model/service';\nimport {useLocation} from \"react-router\";\nimport {QueryString} from \"../../../lib/location/query.string\";\nimport {Search as SearchBar} from \"../../components/search/search\";\nimport {Link} from \"react-router-dom\";\nimport {SERVICE_ROUTE} from \"../../routes/frontend.routes\";\n\nexport interface SearchProps {\n}\n\nexport interface RequestProps {\n  s?: string;\n  limit?: string;\n  offset?: string;\n  orderBy?: string;\n  orderMode?: string;\n  categories?: string[];\n  minPrice?: string;\n  maxPrice?: string;\n}\n\nconst Search: FunctionComponent<SearchProps> = (props) => {\n  const [services, setServices] = useState<ServiceModel[]>([]);\n  \n  const location = useLocation();\n  \n  const searchParams = useMemo(() => {\n    return QueryString.parse(location.search);\n  }, [location.search]);\n  \n  const loadServices = async () => {\n    let queryString = QueryString.stringify(searchParamsToRequestParams(searchParams));\n    let response, list;\n    try {\n      response = await jsonRequest(`${SERVICES_LIST}?${queryString}`);\n      list = await response.json();\n    } catch (exception) {\n      console.log(exception);\n    }\n    \n    setServices(list.list);\n  };\n  \n  const searchParamsToRequestParams = (values: any) => {\n    let data: RequestProps = {\n      s: values.s,\n      limit: values.limit,\n      offset: values.offset,\n      orderBy: values.orderBy,\n      orderMode: values.orderMode,\n      categories: values.categoryId,\n      minPrice: values.minPrice,\n      maxPrice: values.maxPrice\n    };\n    \n    return data;\n  };\n  \n  useEffect(() => {\n    loadServices();\n  }, [searchParams]);\n  \n  return (\n    <Layout>\n      <Row>\n        <Col xs={12} lg={3}>\n          <Categories />\n        </Col>\n        <Col xs={12} lg={9}>\n          <Row>\n            <Col lg={12}>\n              <SearchBar />\n            </Col>\n          </Row>\n          <Row>\n            {services.map((service, index) => {\n              return (\n                <Col xs={12} lg={4} key={index}>\n                  <Link to={SERVICE_ROUTE.replace(':id', service.id.toString())} style={{textDecoration: 'none'}}>\n                    <Service service={service} />\n                  </Link>\n                </Col>\n              );\n            })}\n          </Row>\n        </Col>\n      </Row>\n    </Layout>\n  );\n};\n\nexport default Search;","/var/www/html/fiverr_frontend/src/app-frontend/containers/signup/signup.tsx",["420","421"],"import React, {useState} from 'react';\nimport {Button, Card, CardBody, CardTitle, Form, FormGroup, Input} from 'reactstrap';\nimport Layout from \"../layout/layout\";\nimport {jsonRequest} from \"../../../api/request/request\";\nimport {REGISTER} from \"../../../api/routing/routes/dashboard\";\nimport {useForm} from \"react-hook-form\";\n\nconst Signup = () => {\n  \n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [username, setUserName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  \n  const {handleSubmit, register} = useForm();\n  \n  const submitForm = () => {\n    \n    const requestOptions = {\n      method: 'POST',\n      headers: {'Content-Type': 'application/json'},\n      body: JSON.stringify({firstName, lastName, username, email, password})\n    };\n    \n    jsonRequest(REGISTER, requestOptions)\n      .then(response => response.json())\n      .then(json => {\n      });\n  };\n  \n  return (\n    <Layout>\n      <div>\n        <Card>\n          <CardBody className=\"container\">\n            <CardTitle tag=\"h5\"> Create Your Account</CardTitle>\n            <Form>\n              <FormGroup>\n                <Input\n                  type=\"text\"\n                  name=\"firstname\"\n                  id=\"firstname\"\n                  placeholder=\"First Name\"\n                  value={firstName}\n                  onChange={(e) => setFirstName(e.target.value)}\n                />\n              </FormGroup>\n              <FormGroup>\n                <Input\n                  type=\"text\"\n                  name=\"lastname\"\n                  id=\"lastname\"\n                  placeholder=\"Last Name\"\n                  value={lastName}\n                  onChange={(e) => setLastName(e.target.value)}\n                />\n              </FormGroup>\n              <FormGroup>\n                <Input\n                  type=\"text\"\n                  name=\"username\"\n                  id=\"username\"\n                  placeholder=\"User Name\"\n                  value={username}\n                  onChange={(e) => setUserName(e.target.value)}\n                />\n              </FormGroup>\n              <FormGroup>\n                <Input\n                  type=\"email\"\n                  name=\"email\"\n                  id=\"exampleEmail\"\n                  placeholder=\"Email/User Name\"\n                  value={email}\n                  onChange={(e) => setEmail(e.target.value)}\n                />\n              </FormGroup>\n              <FormGroup>\n                <Input\n                  type=\"password\"\n                  name=\"Password\"\n                  id=\"examplePassword\"\n                  placeholder=\"Password\"\n                  value={password}\n                  onChange={(e) => setPassword(e.target.value)}\n                />\n              </FormGroup>\n              <Button onClick={submitForm}>Signup</Button>\n            </Form>\n          </CardBody>\n        </Card>\n      </div>\n    </Layout>\n  );\n};\n\nexport default Signup;","/var/www/html/fiverr_frontend/src/app-frontend/containers/dashboard/dashboard.tsx",[],"/var/www/html/fiverr_frontend/src/app-frontend/containers/service/service.tsx",["422","423"],"/var/www/html/fiverr_frontend/src/app-frontend/containers/dashboard/inbox.tsx",["424","425","426","427","428","429","430","431","432"],"import React, {createRef, FunctionComponent, useCallback, useEffect, useState} from 'react';\nimport Layout from \"../layout/layout\";\nimport {RouteComponentProps, useHistory} from \"react-router\";\nimport {jsonRequest, request} from \"../../../api/request/request\";\nimport {\n  CREATE_OFFER,\n  MEDIA_DOWNLOAD_URL,\n  SEND_MESSAGE,\n  THREAD_MESSAGES,\n  THREADS_LIST\n} from \"../../../api/routing/routes/backend.app\";\nimport {Thread} from \"../../../api/model/thread\";\nimport {Message} from \"../../../api/model/message\";\nimport {Link} from \"react-router-dom\";\nimport {SINGLE_MESSAGE, SINGLE_ORDER} from \"../../routes/frontend.routes\";\nimport {Image} from \"../../../app-common/components/image/image\";\nimport {useForm} from \"react-hook-form\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faPaperclip, faPaperPlane, faPencilAlt} from \"@fortawesome/free-solid-svg-icons\";\nimport TimeAgo from 'react-timeago'\nimport {Button, Modal, ModalBody, ModalFooter, ModalHeader, Row, Tooltip} from \"reactstrap/es\";\nimport {ConstraintViolation} from \"../../../lib/validator/validation.result\";\nimport {useSelector} from \"react-redux\";\nimport {getAuthorizedUser} from \"../../../duck/auth/auth.selector\";\nimport {ServiceShort} from \"../../components/service/service.short\";\nimport {Service} from \"../../../api/model/service\";\nimport _ from 'lodash';\nimport {Offer} from '../../components/offer/offer';\n\nexport interface InboxProps extends RouteComponentProps<{ id: string }> {\n\n}\n\nexport const Inbox: FunctionComponent<InboxProps> = (props) => {\n  \n  const [threadList, setThreadList] = useState<Thread[]>([]);\n  const [isThreadsLoading, setIsThreadsLoading] = useState(false);\n  const [isMessagesLoading, setIsMessagesLoading] = useState(false);\n  const [activeThread, setActiveThread] = useState<Thread | undefined>();\n  const [messagesList, setMessagesList] = useState<Message[]>([]);\n  const listRef = createRef<HTMLDivElement>();\n  const [isMessageSending, setMessageSending] = useState(false);\n  const [uploadedFileName, setUploadedFileName] = useState('');\n  const [modal, setModal] = useState(false);\n  const toggleModal = () => setModal(!modal);\n  const user = useSelector(getAuthorizedUser);\n  const [offerService, setOfferService] = useState<Service | undefined>();\n  const [offerId, setOfferId] = useState<number | undefined>();\n  const history = useHistory();\n  \n  //offer form handler\n  const {handleSubmit, register, setError, formState: {errors}, reset} = useForm();\n  //message form handler\n  const {handleSubmit: handleSubmitMessage, register: registerMessage, setError: setErrorMessage, formState: {errors: errorsMessage}, reset: resetMessage, clearErrors: clearErrorsMessage} = useForm();\n  \n  const loadThreadsList = async () => {\n    setIsThreadsLoading(true);\n    try {\n      let response = await jsonRequest(THREADS_LIST);\n      let threadList = await response.json();\n      \n      setThreadList(threadList.threads);\n    } catch (exception) {\n    \n    } finally {\n      setIsThreadsLoading(false);\n    }\n  };\n  \n  const loadMessagesList = async () => {\n    if (activeThread) {\n      setIsMessagesLoading(true);\n      try {\n        let response = await jsonRequest(THREAD_MESSAGES.replace(':id', activeThread?.id.toString()));\n        let messagesList = await response.json();\n        \n        setMessagesList(messagesList.messages);\n      } catch (exception) {\n      \n      } finally {\n        setIsMessagesLoading(false);\n      }\n    }\n  };\n  \n  useEffect(() => {\n    loadThreadsList();\n  }, []);\n  \n  useEffect(() => {\n    loadMessagesList();\n  }, [activeThread]);\n  \n  useEffect(() => {\n    let filterThread = threadList.filter(thread => thread.id.toString() === props.match.params.id);\n    if (filterThread.length > 0) {\n      setActiveThread(filterThread[0]);\n    } else {\n      if (threadList.length > 0) {\n        setActiveThread(threadList[0]);\n      }\n    }\n  }, [props.match.params.id, threadList]);\n  \n  const sendMessage = useCallback(async (values) => {\n    \n    if (!activeThread) {\n      return false;\n    }\n    \n    setMessageSending(true);\n    let queryString = new FormData();\n    if (values.message) {\n      queryString.append('message', values.message);\n    }\n    if (values.file) {\n      queryString.append('file', values.file[0]);\n    }\n    if (offerId) {\n      queryString.append('offerId', offerId.toString());\n    }\n    \n    try {\n      let response = await request(SEND_MESSAGE.replace(':id', activeThread.id.toString()), {\n        body: queryString,\n        method: 'POST',\n      });\n      \n      let message = await response.json();\n      setMessagesList([...messagesList, message.message]);\n      scrollToBottom();\n      resetMessage({\n        message: ''\n      });\n      setOfferService(undefined);\n      setOfferId(undefined);\n    } catch (exception) {\n      let expResponse = await exception.response.json();\n      if (expResponse.code === 422) {\n        if (expResponse.violations) {\n          expResponse.violations.map((error: ConstraintViolation) => {\n            setErrorMessage(error.propertyPath, {\n              type: 'manual',\n              message: error.errorMessage\n            });\n          });\n        }\n      }\n      throw exception;\n    } finally {\n      setMessageSending(false);\n    }\n    \n  }, [messagesList, offerId]);\n  \n  useEffect(() => {\n    scrollToBottom();\n  }, [listRef, activeThread]);\n  \n  const scrollToBottom = useCallback(() => {\n    if (listRef.current) {\n      listRef.current.scrollTop = listRef.current.scrollHeight - listRef.current.clientHeight;\n    }\n  }, [listRef]);\n  \n  const [creatingOffer, setCreatingOffer] = useState(false);\n  \n  const onCreateOffer = useCallback(async (values) => {\n    setCreatingOffer(true);\n    \n    let queryString = JSON.stringify({\n      serviceId: values.serviceId,\n      price: +values.price,\n      description: values.description,\n      duration: values.delivery_duration\n    });\n    \n    try {\n      let response = await jsonRequest(CREATE_OFFER, {\n        method: 'POST',\n        body: queryString\n      });\n      let json = await response.json();\n      \n      await setOfferId(json.offer.id);\n      setModal(false);\n      setOfferService(undefined);\n      reset({\n        price: '',\n        description: '',\n        duration: ''\n      });\n      \n      clearErrorsMessage();\n    } catch (exception) {\n      let expResponse = await exception.response.json();\n      if (expResponse.code === 422) {\n        if (expResponse.violations) {\n          expResponse.violations.map((error: ConstraintViolation) => {\n            setError(error.propertyPath, {\n              type: 'manual',\n              message: error.errorMessage\n            });\n          });\n        }\n      }\n    } finally {\n      setCreatingOffer(false);\n    }\n    \n  }, []);\n  \n  const [tooltipOpen, setTooltipOpen] = useState(false);\n  \n  const tooltipToggle = () => setTooltipOpen(!tooltipOpen);\n  \n  return (\n    <Layout>\n      <h1>Inbox</h1>\n      <div className=\"container-fluid inbox\">\n        <div className=\"row\">\n          <nav className=\"col-md-3 d-none d-md-block bg-light sidebar p-0\">\n            <div className=\"sidebar-sticky\">\n              <ul className=\"nav flex-column\">\n                {threadList.map((thread, index) => (\n                  <li className={`nav-item${thread === activeThread ? ' active' : ''}`}\n                    onClick={() => setActiveThread(thread)}\n                    key={index}>\n                    <Link to={SINGLE_MESSAGE.replace(':id', thread.id.toString())}\n                      className=\"nav-link contact-item\">\n                      <div className=\"thread-image-placeholder\">\n                        <Image image={thread.recipient.profilePicture}\n                          w={45}\n                          h={45}\n                          circle\n                          fit=\"crop\"\n                          default=\"profile\" />\n                      </div>\n                      <div className=\"thread-user-info\">\n                        <span className=\"ml-2\">{thread.recipient.displayName}</span>\n                        <span className=\"float-right thread-time\">\n                          <TimeAgo date={thread.message.createdAt} />\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\n                        <div className=\"thread-latest-message\">\n                          <span className=\"ml-2\">{thread.message.message}</span>\n                        </div>\n                      </div>\n                    </Link>\n                  </li>\n                ))}\n              </ul>\n            </div>\n          </nav>\n          <div className=\"col-md-9 p-0 message-header\">\n            {activeThread && (\n              <>\n                <div className=\"p-2 bg-light\">\n                  <div className=\"thread-image-placeholder\">\n                    <Image image={activeThread.recipient.profilePicture}\n                      w={45}\n                      h={45}\n                      circle\n                      fit=\"crop\"\n                      default=\"profile\" />\n                  </div>\n                  <div className=\"thread-user-info\">\n                    <span className=\"ml-2\">{activeThread.recipient.displayName}</span>\n                  </div>\n                </div>\n                <div className=\"messages-list\"\n                  ref={listRef}>\n                  {messagesList.map((message, index) => {\n                    let profilePicture = message.sender.profilePicture;\n                    let name = message.sender.displayName;\n                    return (\n                      <div key={index}\n                        className=\"message\">\n                        <div className=\"message-image-placeholder\">\n                          <Image image={profilePicture}\n                            w={45}\n                            h={45}\n                            circle\n                            fit=\"crop\"\n                            default=\"profile\" />\n                        </div>\n                        <div className=\"message-user-info\">\n                          <div className=\"\">\n                            {name}\n                            <TimeAgo date={message.createdAt}\n                              className=\"text-xs ml-2 text-black-50\" />\n                          </div>\n                          <div className=\"\">\n                            {message.message}\n                            {message.offer !== null && (\n                              <Offer offer={message.offer} onAccept={(payload) => history.push(SINGLE_ORDER.replace(':id', payload?.id))} onCancel={() => loadMessagesList()} />\n                            )}\n                            <div>\n                              {message.media && message.media.map((image, idx) => (\n                                <React.Fragment key={idx}>\n                                  <a href={MEDIA_DOWNLOAD_URL.replace(':id', image.id.toString())}>\n                                    <Image image={image} h={100} />\n                                  </a>\n                                </React.Fragment>\n                              ))}\n                            </div>\n                          </div>\n                        </div>\n                        <div className=\"clearfix\"> </div>\n                      </div>\n                    );\n                  })}\n                </div>\n                <div className=\"message-form\">\n                  <form method=\"POST\"\n                    onSubmit={handleSubmitMessage(sendMessage)}\n                    className=\"w-100\"\n                    autoComplete=\"off\"\n                  >\n                    <div className=\"input-group\">\n                      <input type=\"text\" {...registerMessage('message')}\n                        className=\"form-control border-primary shadow-none rounded-0\"\n                        placeholder=\"Enter something\"\n                        autoFocus />\n                      <div className=\"input-group-append\" title=\"Create offer\" id=\"offer-button\">\n                        <button type=\"button\" className=\"btn btn-outline-danger mb-0\" onClick={() => setModal(true)}>\n                          <FontAwesomeIcon icon={faPencilAlt} /> Offer\n                        </button>\n                      </div>\n                      <div className=\"input-group-append\" title={uploadedFileName}>\n                        <label className=\"file-picker btn btn-outline-primary mb-0\">\n                          <FontAwesomeIcon icon={faPaperclip} />\n                          <input type=\"file\" {...registerMessage('file')} />\n                        </label>\n                      </div>\n                      <div className=\"input-group-append\">\n                        <button className=\"btn btn-outline-success rounded-0\"\n                          type=\"submit\"\n                          disabled={isMessageSending}>\n                          <FontAwesomeIcon icon={faPaperPlane} />\n                        </button>\n                      </div>\n                      <Tooltip placement=\"top\" isOpen={tooltipOpen} target=\"offer-button\" toggle={tooltipToggle}>\n                        Create offer\n                      </Tooltip>\n                    </div>\n                    <div>{errorsMessage.message && (\n                      <div className=\"alert alert-danger\">{errorsMessage.message.message}</div>\n                    )}</div>\n                  </form>\n                </div>\n              </>\n            )}\n          </div>\n        </div>\n      </div>\n      <Modal isOpen={modal} toggle={toggleModal} size=\"lg\" fade={false} backdrop=\"static\">\n        <ModalHeader toggle={toggleModal}>Create offer</ModalHeader>\n        <form onSubmit={handleSubmit(onCreateOffer)} action={CREATE_OFFER}>\n          <ModalBody>\n            <h3>Select a service</h3>\n            <Row>\n              {user?.seller?.services.map((service, index) => (\n                <div className=\"col-6\" key={index}>\n                  <label\n                    className={`m-0 p-0 mb-2 text-left btn-service btn${service === offerService ? ' active' : ''}`}\n                    onClick={() => setOfferService(service)}\n                  >\n                    <input type=\"radio\" {...register('serviceId')} className=\"d-none\" value={service.id} />\n                    <ServiceShort service={service} />\n                  </label>\n                </div>\n              ))}\n            </Row>\n            {errors.serviceId && (\n              <div className=\"text-danger\">{errors.serviceId.message}</div>\n            )}\n            <div className=\"form-group\">\n              <label htmlFor=\"description\">Description</label>\n              <textarea id=\"description\" className=\"form-control\" {...register('description', {required: true})} />\n              {errors.description && (\n                <div className=\"text-danger\">{errors.description.message}</div>\n              )}\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"delivery-days\">Delivery days</label>\n              <select id=\"delivery-days\" className=\"form-control\" {...register('delivery_duration', {required: true})}>\n                {_.range(30).map((item, index) => (\n                  <option value={index + 1}>{index + 1}</option>\n                ))}\n              </select>\n              {errors.duration && (\n                <div className=\"text-danger\">{errors.duration.message}</div>\n              )}\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"price\">Price</label>\n              <input type=\"number\" className=\"form-control\" {...register('price', {required: true})} />\n              {errors.price && (\n                <div className=\"text-danger\">{errors.price.message}</div>\n              )}\n            </div>\n          </ModalBody>\n          <ModalFooter>\n            <Button color=\"success\" type=\"submit\" disabled={creatingOffer}>Create offer</Button>\n          </ModalFooter>\n        </form>\n      </Modal>\n    </Layout>\n  );\n};","/var/www/html/fiverr_frontend/src/app-frontend/containers/dashboard/earnings.tsx",[],"/var/www/html/fiverr_frontend/src/app-frontend/containers/dashboard/payments.tsx",[],"/var/www/html/fiverr_frontend/src/app-frontend/containers/dashboard/order/orders.tsx",[],"/var/www/html/fiverr_frontend/src/app-frontend/containers/dashboard/order/order.tsx",["433","434","435"],"import React, {FunctionComponent, useCallback, useEffect, useState} from \"react\";\nimport {RouteComponentProps} from \"react-router\";\nimport {Order as OrderModel, OrderStates} from '../../../../api/model/order';\nimport {jsonRequest} from \"../../../../api/request/request\";\nimport {\n  APPROVE_ORDER_HISTORY,\n  CANCEL_ORDER_HISTORY,\n  CANCEL_ORDER_REQUEST,\n  DELIVER_ORDER_REQUEST,\n  GET_ORDER,\n  UPDATE_ORDER_REQUEST\n} from \"../../../../api/routing/routes/dashboard\";\nimport Layout from \"../../layout/layout\";\nimport {Link} from \"react-router-dom\";\nimport {ORDER_PAYMENT, SINGLE_MESSAGE} from \"../../../routes/frontend.routes\";\nimport {useSelector} from \"react-redux\";\nimport {getAuthorizedUser} from \"../../../../duck/auth/auth.selector\";\nimport moment, {Moment} from \"moment\";\nimport {useForm} from \"react-hook-form\";\nimport classNames from \"classnames\";\nimport _ from \"lodash\";\nimport {OrderHistory} from \"../../../../api/model/order.history\";\n\ninterface OrderProps extends RouteComponentProps<{ id: string }> {\n\n}\n\nexport const Order: FunctionComponent<OrderProps> = (props) => {\n  \n  const user = useSelector(getAuthorizedUser);\n  \n  const [isLoading, setLoading] = useState(false);\n  const [order, setOrder] = useState<OrderModel>();\n  const {register: cancelRegister, handleSubmit: handleCancelSubmit} = useForm();\n  const {register: changeRegister, handleSubmit: handleChangeSubmit} = useForm();\n  const {register: deliverRegister, handleSubmit: handleDeliverSubmit} = useForm();\n  \n  useEffect(() => {\n    loadOrder(props.match.params.id);\n  }, [props.match.params.id]);\n  \n  const loadOrder = async (orderId: string) => {\n    setLoading(true);\n    try {\n      let response = await jsonRequest(GET_ORDER.replace(':id', orderId));\n      let json = await response.json();\n      setOrder(json.order);\n    } catch (e) {\n      throw e;\n    } finally {\n      setLoading(false);\n    }\n  };\n  \n  const [isCancelling, setCancelling] = useState(false);\n  const [isDelivering, setDelivering] = useState(false);\n  const [isChanging, setChanging] = useState(false);\n  const startCancelling = () => {\n    setDelivering(false);\n    setChanging(false);\n    setCancelling(true);\n  };\n  \n  const startDelivering = () => {\n    setCancelling(false);\n    setChanging(false);\n    setDelivering(true);\n  };\n  \n  const startChanging = () => {\n    setCancelling(false);\n    setDelivering(false);\n    setChanging(true);\n  };\n  \n  const cancelOrder = async (values: any) => {\n    if(!order){\n      return;\n    }\n    setLoading(true);\n    \n    try {\n      let response = await jsonRequest(CANCEL_ORDER_REQUEST.replace(':id', order?.id), {\n        method: 'POST',\n        body: JSON.stringify(values)\n      });\n      let json = await response.json();\n      \n      setOrder(json.order);\n    } catch (e) {\n      throw e;\n    } finally {\n      setLoading(false);\n      setCancelling(false);\n    }\n  };\n  \n  const changeOrder = async (values: any) => {\n    if(!order){\n      return;\n    }\n    setLoading(true);\n  \n    try {\n      let response = await jsonRequest(UPDATE_ORDER_REQUEST.replace(':id', order?.id), {\n        method: 'POST',\n        body: JSON.stringify(values)\n      });\n      let json = await response.json();\n    \n      setOrder(json.order);\n    } catch (e) {\n      throw e;\n    } finally {\n      setLoading(false);\n      setChanging(false);\n    }\n  };\n  \n  const deliverOrder = async (values: any) => {\n    if(!order){\n      return;\n    }\n    setLoading(true);\n  \n    try {\n      let response = await jsonRequest(DELIVER_ORDER_REQUEST.replace(':id', order?.id), {\n        method: 'POST',\n        body: JSON.stringify(values)\n      });\n      let json = await response.json();\n    \n      setOrder(json.order);\n    } catch (e) {\n      throw e;\n    } finally {\n      setLoading(false);\n      setDelivering(false);\n    }\n  };\n  \n  const processOrderHistory = async (history: OrderHistory) => {\n    setLoading(true);\n  \n    try {\n      let response = await jsonRequest(APPROVE_ORDER_HISTORY.replace(':id', history.id), {\n        method: 'POST'\n      });\n      let json = await response.json();\n    \n      setOrder(json.order);\n    } catch (e) {\n      throw e;\n    } finally {\n      setLoading(false);\n      setDelivering(false);\n    }\n  };\n  \n  const cancelOrderHistory = async (history: OrderHistory) => {\n    setLoading(true);\n  \n    try {\n      let response = await jsonRequest(CANCEL_ORDER_HISTORY.replace(':id', history.id), {\n        method: 'POST'\n      });\n      let json = await response.json();\n    \n      setOrder(json.order);\n    } catch (e) {\n      throw e;\n    } finally {\n      setLoading(false);\n      setDelivering(false);\n    }\n  };\n  \n  return (\n    <Layout>\n      <h1>Order# {order?.orderId} {' '}\n        <small className=\"text-muted text-sm align-middle\">{order?.state?.toUpperCase()}</small></h1>\n      {order?.state?.toLowerCase() === OrderStates.PENDING && order?.buyer.id === user?.id && (\n        <div className=\"text-center border p-3 rounded\">\n          <div className=\"alert alert-warning\">Order is not yet started, please pay the order to start.</div>\n          <Link to={ORDER_PAYMENT.replace(':id', order.id)} className=\"btn btn-primary\">Make Payment</Link>\n        </div>\n      )}\n      {order?.state?.toLowerCase() === OrderStates.PENDING && order?.seller.id === user?.id && (\n        <div className=\"text-center border p-5 rounded bg-gray-100 shadow-inner\">\n          <h4 className=\"m-0\">Order is not yet started, waiting for payment</h4>\n        </div>\n      )}\n      {order?.state.toLowerCase() === OrderStates.PROGRESS && (\n        <>\n          <table className=\"table table-bordered table-hover\">\n            <tr>\n              <th>Order No.</th>\n              <td>{order?.orderId}</td>\n            </tr>\n            <tr>\n              <th>Order Price</th>\n              <td>{order.price}</td>\n            </tr>\n            <tr>\n              <th>Buyer</th>\n              <td>{order?.buyer?.displayName}</td>\n            </tr>\n            <tr>\n              <th>Seller</th>\n              <td>{order?.seller?.displayName}</td>\n            </tr>\n            <tr>\n              <th>Service</th>\n              <td>{order?.service?.title}</td>\n            </tr>\n            <tr>\n              <th>Due on</th>\n              <td title={order.deadline!}>{moment(order.deadline).fromNow()}</td>\n            </tr>\n            <tr>\n              <th>Description</th>\n              <td>{order.description}</td>\n            </tr>\n          </table>\n          \n          <h3>Updates</h3>\n          <table className=\"table table-bordered table-hover\">\n            <thead>\n              <tr>\n                <th>Event</th>\n                <th>Description</th>\n                <th>Created At</th>\n                <th>Is approved</th>\n                <th>Actions</th>\n              </tr>\n            </thead>\n            <tbody>\n              {order.history.map(history => (\n                <tr>\n                  <th>{history.event}</th>\n                  <td>{history.description}</td>\n                  <td>{moment(history.createdAt).format('lll')}</td>\n                  <td>{history.approved ? 'Yes' : 'No'}</td>\n                  <td>\n                    {history.createdBy.id !== user?.id && !history.approved && (\n                      <button className=\"btn btn-primary mr-3\" type=\"button\" onClick={() => processOrderHistory(history)}>Approve</button>\n                    )}\n                    {!history.approved && (\n                      <button className=\"btn btn-danger mr-3\" type=\"button\" onClick={() => cancelOrderHistory(history)}>Cancel</button>\n                    )}\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n          <div className=\"text-center mt-5 p-5 rounded border bg-gray-100 shadow-inner\">\n            {order.thread && (\n              <Link to={SINGLE_MESSAGE.replace(':id', order?.thread.id)} className=\"btn btn-primary mr-3\">Open Messages</Link>\n            )}\n            <button className={classNames(['btn btn-danger mr-3', isCancelling ? 'btn-lg' : ''])} onClick={startCancelling}>Cancel Order</button>\n            {order.seller.id === user!.id && (\n              <>\n                <button className={classNames(['btn btn-warning mr-3', isChanging ? 'btn-lg' : ''])} onClick={startChanging}>Change Order</button>\n                <button className={classNames(['btn btn-success mr-3', isDelivering ? 'btn-lg' : ''])} onClick={startDelivering}>Deliver Order</button>\n              </>\n            )}\n            <div className=\"mt-3 text-left\">\n              {isCancelling && (\n                <form onSubmit={handleCancelSubmit(cancelOrder)}>\n                  <div className=\"form-group\">\n                    <label>Reason</label>\n                    <textarea {...cancelRegister('reason')} placeholder=\"Reason\" className=\"form-control\" />\n                  </div>\n                  <button className=\"btn btn-danger mr-3\" type=\"submit\">Confirm</button>\n                  <button className=\"btn\" onClick={() => setCancelling(false)} type=\"button\">Cancel</button>\n                </form>\n              )}\n              {isChanging && (\n                <form onSubmit={handleChangeSubmit(changeOrder)}>\n                  <div className=\"form-group\">\n                    <label>Reason</label>\n                    <textarea {...changeRegister('reason')} placeholder=\"Reason\" className=\"form-control\" />\n                  </div>\n                  <div className=\"form-group\">\n                    <label>Days Extension</label>\n                    <select {...changeRegister('days')} className=\"form-control\">\n                      {_.range(30).map((item, index) => (\n                        <option value={index + 1}>{index + 1}</option>\n                      ))}\n                    </select>\n                  </div>\n                  <button className=\"btn btn-warning mr-3\" type=\"submit\">Confirm</button>\n                  <button className=\"btn\" onClick={() => setChanging(false)} type=\"button\">Cancel</button>\n                </form>\n              )}\n              {isDelivering && (\n                <form onSubmit={handleDeliverSubmit(deliverOrder)}>\n                  <div className=\"form-group\">\n                    <label>Reason</label>\n                    <textarea {...deliverRegister('reason')} placeholder=\"Reason\" className=\"form-control\" />\n                  </div>\n                  <button className=\"btn btn-success mr-3\" type=\"submit\">Confirm</button>\n                  <button className=\"btn\" onClick={() => setDelivering(false)} type=\"button\">Cancel</button>\n                </form>\n              )}\n            </div>\n          </div>\n        </>\n      )}\n    </Layout>\n  );\n};","/var/www/html/fiverr_frontend/src/app-frontend/containers/dashboard/order/payment.tsx",["436"],"import React, {FunctionComponent, useEffect, useState} from \"react\";\nimport {RouteComponentProps} from \"react-router\";\nimport {Order as OrderModel, OrderStates} from '../../../../api/model/order';\nimport {jsonRequest} from \"../../../../api/request/request\";\nimport {GET_ORDER} from \"../../../../api/routing/routes/dashboard\";\nimport Layout from \"../../layout/layout\";\nimport {Link} from \"react-router-dom\";\nimport {SINGLE_ORDER} from \"../../../routes/frontend.routes\";\nimport {loadStripe} from '@stripe/stripe-js';\nimport {Elements,} from '@stripe/react-stripe-js';\nimport {StripePayment} from \"./stripe.payment\";\nimport {PaypalPayment} from \"./paypal.payment\";\nimport {currency} from \"../../../../lib/currency/currency\";\n\ninterface OrderProps extends RouteComponentProps<{ id: string }> {\n\n}\n\nexport const OrderPayment: FunctionComponent<OrderProps> = (props) => {\n  \n  const [isLoading, setLoading] = useState(false);\n  const [order, setOrder] = useState<OrderModel>();\n  const stripePromise = loadStripe('pk_test_6pRNASCoBOKtIshFeQd4XMUh');\n  \n  useEffect(() => {\n    loadOrder(props.match.params.id);\n  }, [props.match.params.id]);\n  \n  const loadOrder = async (orderId: string) => {\n    setLoading(true);\n    try {\n      let response = await jsonRequest(GET_ORDER.replace(':id', orderId));\n      let json = await response.json();\n      setOrder(json.order);\n    } catch (e) {\n      throw e;\n    } finally {\n      setLoading(false);\n    }\n  };\n  \n  return (\n    <Layout>\n      <Elements stripe={stripePromise}>\n        <h1>Order# {order?.orderId}\n          <small className=\"text-muted text-sm align-middle\">{order?.state?.toUpperCase()}</small></h1>\n        {order?.state?.toLocaleLowerCase() === OrderStates.PENDING ? (\n          <div className=\"text-center\">\n            <div className=\"alert alert-info h4\">\n              You will pay <strong>{currency()}{order.price}</strong> for this order\n            </div>\n            <div className=\"row mt-5\">\n              <div className=\"col text-center\">\n                <div className=\"border border-primary text-primary rounded-lg p-5\">\n                  <StripePayment />\n                </div>\n              </div>\n              <div className=\"col text-center\">\n                <div className=\"border border-primary text-primary rounded-lg p-5\">\n                  <PaypalPayment orderId={order.id} />\n                </div>\n              </div>\n            </div>\n          </div>\n        ) : (\n          <>\n            <h1 className=\"text-center\">This order is already paid</h1>\n            {order && (\n              <Link to={SINGLE_ORDER.replace(':id', order?.id)} className=\"btn btn-primary\">Back to Order</Link>\n            )}\n          </>\n        )}\n      </Elements>\n    </Layout>\n  );\n};\n","/var/www/html/fiverr_frontend/src/app-frontend/containers/dashboard/order/paypal.confirm.tsx",["437","438","439","440","441","442"],"import React, {FunctionComponent, useEffect, useState} from \"react\";\nimport {request} from \"../../../../api/request/request\";\nimport {CONFIRM_PAYPAL_PAYMENT} from \"../../../../api/routing/routes/dashboard\";\nimport Layout from \"../../layout/layout\";\nimport {RouteComponentProps, useHistory, useLocation} from \"react-router\";\nimport {QueryString} from \"../../../../lib/location/query.string\";\nimport {SINGLE_ORDER} from \"../../../routes\";\n\ninterface PaypalConfirmProps extends RouteComponentProps<{ id: string, token: string }> {\n}\n\nexport const PaypalConfirm: FunctionComponent<PaypalConfirmProps> = (props) => {\n  const [isLoading, setLoading] = useState(false);\n  const [isSuccess, setSuccess] = useState(false);\n  const [isError, setError] = useState(false);\n  const location = useLocation();\n  const history = useHistory();\n  const confirmPayment = async () => {\n    setLoading(true);\n    let searchString = QueryString.parse(location.search);\n    let queryString = new URLSearchParams();\n    queryString.append('token', searchString.token as string);\n    \n    try {\n      let response = await request(\n        CONFIRM_PAYPAL_PAYMENT\n          .replace(':id', props.match.params.id)\n          .replace(':token', props.match.params.token)\n        , {\n          body: queryString,\n          method: 'POST'\n        });\n      \n      let json = await response.json();\n      setSuccess(true);\n      \n      history.push(SINGLE_ORDER.replace(':id', props.match.params.id));\n    } catch (e) {\n      setError(true);\n      // throw e;\n    } finally {\n      setLoading(false);\n    }\n  };\n  \n  useEffect(() => {\n    confirmPayment();\n  }, []);\n  \n  return (\n    <Layout>\n      <h1>Please wait...</h1>\n    </Layout>\n  );\n};","/var/www/html/fiverr_frontend/src/app-frontend/containers/dashboard/profile/profile.tsx",["443","444"],"/var/www/html/fiverr_frontend/src/app-frontend/containers/dashboard/order/paypal.payment.tsx",[],"/var/www/html/fiverr_frontend/src/app-frontend/containers/dashboard/order/stripe.payment.tsx",["445","446"],"import React, {useCallback, useState} from \"react\";\nimport {CardElement, useElements, useStripe,} from '@stripe/react-stripe-js';\n\nexport const StripePayment = () => {\n  const stripe = useStripe();\n  const elements = useElements();\n  const [errors, setErrors] = useState<string | undefined>();\n  const [isLoading, setLoading] = useState(false);\n  \n  const handleSubmit = useCallback(async (event) => {\n    event.preventDefault();\n    setLoading(true);\n    setErrors(undefined);\n    if (stripe && elements) {\n      const {error, paymentMethod} = await stripe?.createPaymentMethod({\n        type: 'card',\n        card: elements.getElement(CardElement)!,\n      });\n      \n      setLoading(false);\n      \n      if (error) {\n        setErrors(error.message);\n      }\n    }\n  }, [stripe, elements]);\n  \n  return (\n    <form onSubmit={handleSubmit}>\n      {errors && (\n        <div className=\"alert alert-danger text-left mb-3\">{errors}</div>\n      )}\n      <h3>\n        Pay with {' '}\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"62\" height=\"25\">\n          <path fill=\"#32325d\" d=\"M5 10.1c0-.6.6-.9 1.4-.9 1.2 0 2.8.4 4 1.1V6.5c-1.3-.5-2.7-.8-4-.8C3.2 5.7 1 7.4 1 10.3c0 4.4 6 3.6 6 5.6 0 .7-.6 1-1.5 1-1.3 0-3-.6-4.3-1.3v3.8c1.5.6 2.9.9 4.3.9 3.3 0 5.5-1.6 5.5-4.5.1-4.8-6-3.9-6-5.7zM29.9 20h4V6h-4v14zM16.3 2.7l-3.9.8v12.6c0 2.4 1.8 4.1 4.1 4.1 1.3 0 2.3-.2 2.8-.5v-3.2c-.5.2-3 .9-3-1.4V9.4h3V6h-3V2.7zm8.4 4.5L24.6 6H21v14h4v-9.5c1-1.2 2.7-1 3.2-.8V6c-.5-.2-2.5-.5-3.5 1.2zm5.2-2.3l4-.8V.8l-4 .8v3.3zM61.1 13c0-4.1-2-7.3-5.8-7.3s-6.1 3.2-6.1 7.3c0 4.8 2.7 7.2 6.6 7.2 1.9 0 3.3-.4 4.4-1.1V16c-1.1.6-2.3.9-3.9.9s-2.9-.6-3.1-2.5H61c.1-.2.1-1 .1-1.4zm-7.9-1.5c0-1.8 1.1-2.5 2.1-2.5s2 .7 2 2.5h-4.1zM42.7 5.7c-1.6 0-2.5.7-3.1 1.3l-.1-1h-3.6v18.5l4-.7v-4.5c.6.4 1.4 1 2.8 1 2.9 0 5.5-2.3 5.5-7.4-.1-4.6-2.7-7.2-5.5-7.2zm-1 11c-.9 0-1.5-.3-1.9-.8V10c.4-.5 1-.8 1.9-.8 1.5 0 2.5 1.6 2.5 3.7 0 2.2-1 3.8-2.5 3.8z\" />\n        </svg>\n      </h3>\n      <div className=\"my-4\">\n        <CardElement\n          options={{\n            style: {\n              base: {\n                fontSize: '16px',\n                color: '#424770',\n                '::placeholder': {\n                  color: '#aab7c4',\n                },\n              },\n              invalid: {\n                color: '#9e2146',\n              },\n            },\n          }}\n        />\n      </div>\n      <button type=\"submit\" className=\"btn btn-primary mt-3\" disabled={!stripe || isLoading}>\n        Pay with Stripe\n      </button>\n    </form>\n  );\n};","/var/www/html/fiverr_frontend/src/app-frontend/containers/categories/categories.tsx",["447","448"],"import React, {useEffect, useState} from 'react';\nimport {ListGroup} from 'reactstrap';\nimport {jsonRequest} from \"../../../api/request/request\";\nimport {CATEGORIES_LIST} from \"../../../api/routing/routes/dashboard\";\nimport {SEARCH_ROUTE} from \"../../routes\";\nimport {Link} from \"react-router-dom\";\nimport {Category} from \"../../../api/model/category\";\n\nconst Categories = () => {\n  const [categories, setCategories] = useState<Category[]>([]);\n  \n  const loadCategories = () => {\n    jsonRequest(CATEGORIES_LIST)\n      .then(response => response.json())\n      .then(json => {\n        setCategories(json.list);\n      });\n  };\n  \n  useEffect(() => {\n    loadCategories();\n  }, []);\n  \n  \n  return (\n    <ListGroup>\n      {categories.map((cat, index) => (\n        <Link to={`${SEARCH_ROUTE}?categoryId[]=${cat.id}`} className=\"list-group-item\" key={index}>\n          {cat.name}\n        </Link>\n      ))}\n    </ListGroup>\n  );\n};\n\nexport default Categories;\n","/var/www/html/fiverr_frontend/src/app-frontend/containers/sellers/sellers.tsx",[],"/var/www/html/fiverr_frontend/src/app-frontend/containers/services/services.tsx",[],"/var/www/html/fiverr_frontend/src/app-frontend/containers/layout/layout.tsx",[],"/var/www/html/fiverr_frontend/src/app-frontend/components/service/service.tsx",[],"/var/www/html/fiverr_frontend/src/app-frontend/components/service/service.short.tsx",[],"/var/www/html/fiverr_frontend/src/app-frontend/components/offer/offer.tsx",[],"/var/www/html/fiverr_frontend/src/app-frontend/components/search/search.tsx",["449"],"import React, {FunctionComponent, useCallback, useMemo} from \"react\";\nimport {Form, FormGroup, Input} from \"reactstrap/es\";\nimport {SEARCH_ROUTE} from \"../../routes\";\nimport {useHistory, useLocation} from \"react-router\";\nimport {QueryString} from \"../../../lib/location/query.string\";\nimport {useForm} from \"react-hook-form\";\n\n\nexport const Search: FunctionComponent = () => {\n\n    const location = useLocation();\n    const history = useHistory();\n    const {register, handleSubmit} = useForm();\n\n    const searchParams = useMemo(() => {\n        return QueryString.parse(location.search);\n    }, [location.search]);\n\n    const onSubmit = useCallback((values) => {\n        let qs = QueryString.stringify({...searchParams, s: values.s});\n        history.push(`${SEARCH_ROUTE}?${qs}`);\n    }, [searchParams]);\n\n    return (\n        <Form onSubmit={handleSubmit(onSubmit)} action={SEARCH_ROUTE}>\n            <FormGroup>\n                <Input\n                    type=\"search\"\n                    {...register('s')}\n                    placeholder=\"Search services...\"\n                    defaultValue={searchParams.s}\n                />\n            </FormGroup>\n        </Form>\n    );\n};","/var/www/html/fiverr_frontend/src/app-frontend/containers/layout/navbar.tsx",["450"],"/var/www/html/fiverr_frontend/src/app-frontend/components/seller/seller.tsx",[],"/var/www/html/fiverr_frontend/src/app-frontend/routes/frontend.routes.ts",[],"/var/www/html/fiverr_frontend/src/app-frontend/containers/dashboard/services/list.tsx",[],"/var/www/html/fiverr_frontend/src/app-frontend/containers/dashboard/services/create.tsx",[],"/var/www/html/fiverr_frontend/src/app-frontend/containers/dashboard/services/form.tsx",["451","452","453","454","455"],"import React, {FunctionComponent, useCallback, useEffect, useState} from \"react\";\nimport {FileUploader} from \"../../../components/upload/file.uploader\";\nimport {Media} from \"../../../../api/model/media\";\nimport {getErrorClass, getErrors} from \"../../../../lib/error/error\";\nimport {Category} from \"../../../../api/model/category\";\nimport {jsonRequest} from \"../../../../api/request/request\";\nimport {CATEGORIES_LIST} from \"../../../../api/routing/routes/dashboard\";\nimport {QueryString} from \"../../../../lib/location/query.string\";\nimport {useFieldArray, UseFormReturn} from \"react-hook-form\";\nimport {Package} from \"./package\";\n\ninterface ServiceFormProps {\n  onSubmit: any;\n  isLoading: boolean;\n  useForm: UseFormReturn,\n  initialValues?: any;\n}\n\nexport const ServiceForm: FunctionComponent<ServiceFormProps> = ({\n  onSubmit, isLoading, useForm, initialValues\n}) => {\n  \n  const {watch, handleSubmit, formState: {errors}, register, reset, getValues: values, control} = useForm;\n  const [categories, setCategories] = useState<Category[]>([]);\n  const [subCategories, setSubCategories] = useState<Category[]>([]);\n  const parentId = watch('category');\n  \n  const [files, setFiles] = useState<string[]>([]);\n  \n  const loadCategories = async () => {\n    try {\n      let q = QueryString.stringify({\n        displayType: 'parent'\n      });\n      let response = await jsonRequest(CATEGORIES_LIST + '?' + q);\n      let json = await response.json();\n      \n      setCategories(json.list);\n    } catch (e) {\n      throw e;\n    }\n  };\n  \n  const loadSubCategories = async () => {\n    if (!parentId) {\n      return;\n    }\n    try {\n      let q = QueryString.stringify({\n        parentId\n      });\n      let response = await jsonRequest(CATEGORIES_LIST + '?' + q);\n      let json = await response.json();\n      \n      setSubCategories(json.list);\n    } catch (e) {\n      throw e;\n    }\n  };\n  \n  useEffect(() => {\n    loadCategories();\n  }, []);\n  \n  useEffect(() => {\n    loadSubCategories();\n  }, [parentId]);\n  \n  const onDeleteFile = (index: number) => {\n    setFiles(prevState => prevState.filter((item, i) => i !== index));\n  };\n  \n  const onUploadFiles = (uploadedFiles: Media[]) => {\n    setFiles(uploadedFiles.map(i => i.id));\n  };\n  \n  useEffect(() => {\n    if(initialValues && initialValues.files) {\n      setFiles(initialValues.files);\n    }\n  }, [initialValues]);\n  \n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      {files.map((file, index) => (\n        <input type=\"hidden\" value={file} {...register(`files[${index}]`)} key={index} />\n      ))}\n      <div className=\"row\">\n        <div className=\"col\">\n          <div className=\"form-group\">\n            <label htmlFor=\"title\">Title</label>\n            <input type=\"text\" id=\"title\"\n              className={`form-control ${getErrorClass(errors.title)}`}\n              {...register('title')}\n            />\n            {getErrors(errors.title)}\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"description\">Description</label>\n            <textarea id=\"description\" className={`form-control ${getErrorClass(errors.description)}`} {...register('description')} />\n            {getErrors(errors.description)}\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"category\">Category</label>\n            <select id=\"category\" {...register('category')}\n              className={`form-control ${getErrorClass(errors.category)}`}\n            >\n              <option value=\"\">Choose a category</option>\n              {categories.map(category => (\n                <option value={category.id} key={category.id}>{category.name}</option>\n              ))}\n            </select>\n            {getErrors(errors.category)}\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"subCategory\">Sub Category</label>\n            <select id=\"subCategory\" {...register('subCategory')}\n              className={`form-control ${getErrorClass(errors.subCategory)}`}\n            >\n              <option value=\"\">Choose a sub category</option>\n              {subCategories.map(category => (\n                <option value={category.id} key={category.id}>{category.name}</option>\n              ))}\n            </select>\n            {getErrors(errors.subCategory)}\n          </div>\n        </div>\n        <div className=\"col\">\n          <div className={`${getErrorClass(errors.files)}`}>\n            <FileUploader\n              onUpload={(files: Media[]) => onUploadFiles(files)}\n              onDelete={(index: number, files: Media[]) => onDeleteFile(index)}\n              label=\"Service photos\"\n              errorElement={errors.files}\n              initialFiles={initialValues?.files}\n            />\n          </div>\n        </div>\n      </div>\n      <h4>Packages</h4>\n      <div className=\"row mb-3\">\n        <Package control={control} errors={errors} register={register} />\n      </div>\n      <button className=\"btn btn-primary\" disabled={isLoading}>Save</button>\n    </form>\n  );\n};\n\n\n\n\n\n\n\n\n\n\n\n\n\n","/var/www/html/fiverr_frontend/src/lib/error/error.tsx",[],"/var/www/html/fiverr_frontend/src/app-frontend/containers/dashboard/services/package.tsx",[],"/var/www/html/fiverr_frontend/src/app-frontend/containers/dashboard/services/package.lines.tsx",[],"/var/www/html/fiverr_frontend/src/app-frontend/containers/dashboard/services/edit.tsx",["456","457"],"import React, {FunctionComponent, useEffect, useState} from \"react\";\nimport Layout from \"../../layout/layout\";\nimport {useForm} from \"react-hook-form\";\nimport {ServiceForm} from \"./form\";\nimport {jsonRequest} from \"../../../../api/request/request\";\nimport {CREATE_SERVICE, GET_SERVICE, UPDATE_SERVICE} from \"../../../../api/routing/routes/dashboard\";\nimport {RouteComponentProps, useHistory} from \"react-router\";\nimport {SERVICES} from \"../../../routes/frontend.routes\";\nimport {ConstraintViolation} from \"../../../../lib/validator/validation.result\";\nimport {Service} from \"../../../../api/model/service\";\n\ninterface EditServiceProps extends RouteComponentProps<{id: string}>{\n\n}\n\nexport const EditService: FunctionComponent<EditServiceProps> = (props) => {\n  const [isLoading, setLoading] = useState(false);\n  const useFormHook = useForm();\n  const {setError, reset, getValues} = useFormHook;\n  const history = useHistory();\n  const [initialValues, setInitialValues] = useState<any>();\n  \n  const onSubmit = async (values: any) => {\n    console.log(values);\n    \n    setLoading(true);\n    try {\n      let response = await jsonRequest(UPDATE_SERVICE.replace(':id', props.match.params.id), {\n        body: JSON.stringify(values),\n        method: 'PATCH'\n      });\n      await response.json();\n      \n      history.push(SERVICES);\n      \n    } catch (e) {\n      if (e.code === 422) {\n        let errorResponse = await e.response.json();\n        \n        if (errorResponse.violations) {\n          errorResponse.violations.forEach((error: ConstraintViolation) => {\n            setError(error.propertyPath, {\n              type: 'manual',\n              message: error.errorMessage\n            });\n          });\n        }\n      }\n      throw e;\n    } finally {\n      setLoading(false);\n    }\n  };\n  \n  const loadService = async (id: string) => {\n    setLoading(true);\n    try{\n      let response = await jsonRequest(GET_SERVICE.replace(':id', id));\n      let json: {service: Service} = await response.json();\n      \n      reset({\n        ...json.service,\n        category: json.service.category.id,\n        subCategory: json.service.subCategory.id,\n        files: json.service.images.map(i => i.id)\n      });\n      \n      setInitialValues(getValues());\n    }catch (e) {\n      throw e;\n    }finally {\n      setLoading(false);\n    }\n  };\n  \n  useEffect(() => {\n    loadService(props.match.params.id);\n  }, [props.match.params.id]);\n  \n  return (\n    <Layout>\n      <div className=\"card\">\n        <div className=\"card-header\">\n          Edit Service\n        </div>\n        <div className=\"card-body\">\n          <ServiceForm\n            onSubmit={onSubmit}\n            isLoading={isLoading}\n            useForm={useFormHook}\n            initialValues={initialValues}\n          />\n        </div>\n      </div>\n    </Layout>\n  );\n};","/var/www/html/fiverr_frontend/src/app-admin/app.tsx",["458","459"],"/var/www/html/fiverr_frontend/src/app-admin/routes/frontend.routes.ts",[],"/var/www/html/fiverr_frontend/src/app-admin/containers/login/login.tsx",["460"],"/var/www/html/fiverr_frontend/src/app-admin/containers/dashboard/dashboard.tsx",[],"/var/www/html/fiverr_frontend/src/app-admin/containers/dashboard/payments.tsx",[],["461","462"],"/var/www/html/fiverr_frontend/src/app-admin/containers/dashboard/earnings.tsx",[],"/var/www/html/fiverr_frontend/src/app-admin/containers/dashboard/profile/profile.tsx",["463","464"],"/var/www/html/fiverr_frontend/src/app-admin/containers/layout/layout.tsx",[],"/var/www/html/fiverr_frontend/src/app-admin/containers/layout/navbar.tsx",["465"],"/var/www/html/fiverr_frontend/src/api/routing/routes/backend.app.ts",[],"/var/www/html/fiverr_frontend/src/app-common/components/upload/file.uploader.tsx",["466"],"import React, {FunctionComponent, useCallback, useEffect, useRef, useState} from \"react\";\nimport {request} from \"../../../api/request/request\";\nimport {MEDIA_UPLOAD_MULTIPLE} from \"../../../api/routing/routes/backend.app\";\nimport {Media} from \"../../../api/model/media\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faSpinner} from \"@fortawesome/free-solid-svg-icons/faSpinner\";\nimport {Image} from \"../image/image\";\nimport {faTrash} from \"@fortawesome/free-solid-svg-icons/faTrash\";\nimport {getErrorClass, getErrors} from \"../../../lib/error/error\";\n\ninterface FileUploaderProps {\n  onUpload: Function;\n  onDelete?: Function;\n  label?: string;\n  errorElement?: any;\n  initialFiles?: string[];\n}\n\nexport const FileUploader: FunctionComponent<FileUploaderProps> = (props) => {\n  const [isLoading, setLoading] = useState(false);\n  const [uploadedFile, setUploadedFile] = useState<Media[]>([]);\n  const file = useRef<HTMLInputElement>(null);\n  \n  const uploadFile = useCallback(async (values: any) => {\n    setLoading(true);\n    \n    let data = new FormData();\n    if (values.target.files.length > 0) {\n      Object.values(values.target.files).forEach((file: any) => {\n        data.append('file[]', file);\n      });\n    }\n    \n    try {\n      let response = await request(MEDIA_UPLOAD_MULTIPLE, {\n        body: data,\n        method: 'POST'\n      });\n      let json: {data: Media[]} = await response.json();\n      \n      setUploadedFile(json.data);\n  \n      if (file.current) {\n        file.current.value = '';\n      }\n      \n      if (typeof props.onUpload === 'function') {\n        props.onUpload(json.data);\n      }\n      \n    } catch (e) {\n      throw e;\n    } finally {\n      setLoading(false);\n    }\n  }, [props.onUpload]);\n  \n  const deleteFile = async (index: number) => {\n    setLoading(true);\n    \n    let files = [...uploadedFile];\n    files.splice(index, 1);\n    \n    setUploadedFile(files);\n    \n    if (file.current) {\n      file.current.value = '';\n    }\n    \n    if (props.onDelete) {\n      props.onDelete(index, files);\n    }\n    \n    setLoading(false);\n  };\n  \n  useEffect(() => {\n    if(props.initialFiles) {\n      setUploadedFile(props.initialFiles.map(i => {return {id: i, orgFileName: ''}}));\n    }\n  }, [props.initialFiles]);\n  \n  return (\n    <>\n      <div className=\"form-group\">\n        <label htmlFor=\"file\">{props.label || 'Choose file'} {isLoading &&\n        <FontAwesomeIcon icon={faSpinner} spin />}</label>\n        <input\n          type=\"file\"\n          className={`form-control ${getErrorClass(props.errorElement)}`}\n          id=\"file\"\n          name=\"file_uploader\"\n          onChange={uploadFile}\n          disabled={isLoading}\n          ref={file}\n          multiple\n        />\n        {getErrors(props.errorElement)}\n      </div>\n      <div className=\"row\">\n        {uploadedFile && uploadedFile.map((file, index) => (\n          <div className=\"col-3\" key={index}>\n            <div className=\"d-inline-block position-relative\">\n              <Image image={file} w={200} />\n              <button type=\"button\" className=\"btn btn-danger position-absolute top-0 right-0\" onClick={() => deleteFile(index)}>\n                <FontAwesomeIcon icon={faTrash} />\n              </button>\n            </div>\n          </div>\n        ))}\n      </div>\n    </>\n  )\n};","/var/www/html/fiverr_frontend/src/app-common/components/image/image.tsx",["467"],"import React, {FunctionComponent} from 'react';\nimport {Media} from \"../../../api/model/media\";\nimport {MEDIA_URL} from \"../../../api/routing/routes/backend.app\";\nimport {QueryString} from \"../../../lib/location/query.string\";\n\nexport interface ImageProps {\n    image?: Media;\n    h?: number;\n    w?: number;\n    fit?: \"crop\"|\"contain\"|\"max\"|\"fill\"|\"stretch\";\n    q?: number;\n    circle?: boolean;\n    default?: string;\n    fm?: \"webp\"|\"jpg\"|\"pjpg\"|\"png\"|\"gif\"\n}\n\nexport const Image: FunctionComponent<ImageProps> = ({image, h, w, q, fit, circle, default: defaultImage, fm}) => {\n    let id = 'default';\n    if(typeof image === 'object' && image !== null){\n        id = image?.id.toString();\n    }\n    \n    let query = QueryString.stringify({\n        q, w, h, fit, default: defaultImage, fm: fm || \"webp\"\n    });\n    \n    return (\n        <>\n            <img\n                src={`${MEDIA_URL.replace(':id', id)}?${query}`}\n                alt={image?.orgFileName}\n                className={`img-fluid${circle ? ' rounded-circle' : ''}`}\n            />\n        </>\n    );\n};\n","/var/www/html/fiverr_frontend/src/api/routing/routes/backend.admin.ts",[],"/var/www/html/fiverr_frontend/src/app-admin/containers/dashboard/orders/list.tsx",[],"/var/www/html/fiverr_frontend/src/app-admin/containers/dashboard/users/list.tsx",["468","469","470","471","472"],"/var/www/html/fiverr_frontend/src/app-admin/containers/dashboard/featured/list.tsx",[],{"ruleId":"473","replacedBy":"474"},{"ruleId":"475","replacedBy":"476"},{"ruleId":"473","replacedBy":"474"},{"ruleId":"475","replacedBy":"476"},{"ruleId":"473","replacedBy":"477"},{"ruleId":"475","replacedBy":"478"},{"ruleId":"479","severity":1,"message":"480","line":1,"column":8,"nodeType":"481","messageId":"482","endLine":1,"endColumn":13},{"ruleId":"479","severity":1,"message":"483","line":55,"column":10,"nodeType":"481","messageId":"482","endLine":55,"endColumn":21},{"ruleId":"484","severity":1,"message":"485","line":65,"column":6,"nodeType":"486","endLine":65,"endColumn":8,"suggestions":"487"},{"ruleId":"484","severity":1,"message":"488","line":40,"column":6,"nodeType":"486","endLine":40,"endColumn":8,"suggestions":"489"},{"ruleId":"484","severity":1,"message":"490","line":68,"column":6,"nodeType":"486","endLine":68,"endColumn":20,"suggestions":"491"},{"ruleId":"479","severity":1,"message":"492","line":16,"column":10,"nodeType":"481","messageId":"482","endLine":16,"endColumn":22},{"ruleId":"479","severity":1,"message":"493","line":16,"column":24,"nodeType":"481","messageId":"482","endLine":16,"endColumn":32},{"ruleId":"479","severity":1,"message":"494","line":43,"column":10,"nodeType":"481","messageId":"482","endLine":43,"endColumn":19},{"ruleId":"484","severity":1,"message":"495","line":132,"column":6,"nodeType":"486","endLine":132,"endColumn":8,"suggestions":"496"},{"ruleId":"479","severity":1,"message":"497","line":37,"column":10,"nodeType":"481","messageId":"482","endLine":37,"endColumn":26},{"ruleId":"479","severity":1,"message":"498","line":38,"column":10,"nodeType":"481","messageId":"482","endLine":38,"endColumn":27},{"ruleId":"479","severity":1,"message":"499","line":43,"column":28,"nodeType":"481","messageId":"482","endLine":43,"endColumn":47},{"ruleId":"484","severity":1,"message":"500","line":92,"column":6,"nodeType":"486","endLine":92,"endColumn":20,"suggestions":"501"},{"ruleId":"502","severity":1,"message":"503","line":141,"column":67,"nodeType":"504","messageId":"505","endLine":141,"endColumn":69},{"ruleId":"484","severity":1,"message":"506","line":154,"column":6,"nodeType":"486","endLine":154,"endColumn":29,"suggestions":"507"},{"ruleId":"484","severity":1,"message":"508","line":158,"column":6,"nodeType":"486","endLine":158,"endColumn":29,"suggestions":"509"},{"ruleId":"502","severity":1,"message":"503","line":199,"column":67,"nodeType":"504","messageId":"505","endLine":199,"endColumn":69},{"ruleId":"484","severity":1,"message":"510","line":211,"column":6,"nodeType":"486","endLine":211,"endColumn":8,"suggestions":"511"},{"ruleId":"479","severity":1,"message":"512","line":1,"column":35,"nodeType":"481","messageId":"482","endLine":1,"endColumn":46},{"ruleId":"479","severity":1,"message":"513","line":18,"column":17,"nodeType":"481","messageId":"482","endLine":18,"endColumn":23},{"ruleId":"479","severity":1,"message":"514","line":32,"column":10,"nodeType":"481","messageId":"482","endLine":32,"endColumn":19},{"ruleId":"479","severity":1,"message":"514","line":21,"column":10,"nodeType":"481","messageId":"482","endLine":21,"endColumn":19},{"ruleId":"479","severity":1,"message":"515","line":2,"column":9,"nodeType":"481","messageId":"482","endLine":2,"endColumn":20},{"ruleId":"479","severity":1,"message":"514","line":12,"column":10,"nodeType":"481","messageId":"482","endLine":12,"endColumn":19},{"ruleId":"479","severity":1,"message":"516","line":13,"column":10,"nodeType":"481","messageId":"482","endLine":13,"endColumn":19},{"ruleId":"479","severity":1,"message":"517","line":14,"column":10,"nodeType":"481","messageId":"482","endLine":14,"endColumn":17},{"ruleId":"479","severity":1,"message":"518","line":33,"column":11,"nodeType":"481","messageId":"482","endLine":33,"endColumn":15},{"ruleId":"484","severity":1,"message":"519","line":47,"column":6,"nodeType":"486","endLine":47,"endColumn":8,"suggestions":"520"},{"ruleId":"484","severity":1,"message":"521","line":39,"column":6,"nodeType":"486","endLine":39,"endColumn":12,"suggestions":"522"},{"ruleId":"502","severity":1,"message":"503","line":76,"column":67,"nodeType":"504","messageId":"505","endLine":76,"endColumn":69},{"ruleId":"479","severity":1,"message":"523","line":1,"column":16,"nodeType":"481","messageId":"482","endLine":1,"endColumn":33},{"ruleId":"479","severity":1,"message":"524","line":19,"column":21,"nodeType":"481","messageId":"482","endLine":19,"endColumn":34},{"ruleId":"479","severity":1,"message":"525","line":2,"column":21,"nodeType":"481","messageId":"482","endLine":2,"endColumn":34},{"ruleId":"479","severity":1,"message":"526","line":4,"column":26,"nodeType":"481","messageId":"482","endLine":4,"endColumn":39},{"ruleId":"484","severity":1,"message":"527","line":22,"column":8,"nodeType":"486","endLine":22,"endColumn":22,"suggestions":"528"},{"ruleId":"479","severity":1,"message":"483","line":32,"column":10,"nodeType":"481","messageId":"482","endLine":32,"endColumn":21},{"ruleId":"479","severity":1,"message":"512","line":1,"column":35,"nodeType":"481","messageId":"482","endLine":1,"endColumn":46},{"ruleId":"479","severity":1,"message":"529","line":9,"column":9,"nodeType":"481","messageId":"482","endLine":9,"endColumn":22},{"ruleId":"479","severity":1,"message":"530","line":23,"column":62,"nodeType":"481","messageId":"482","endLine":23,"endColumn":67},{"ruleId":"479","severity":1,"message":"531","line":23,"column":80,"nodeType":"481","messageId":"482","endLine":23,"endColumn":86},{"ruleId":"484","severity":1,"message":"532","line":67,"column":6,"nodeType":"486","endLine":67,"endColumn":16,"suggestions":"533"},{"ruleId":"479","severity":1,"message":"534","line":6,"column":9,"nodeType":"481","messageId":"482","endLine":6,"endColumn":23},{"ruleId":"484","severity":1,"message":"535","line":78,"column":6,"nodeType":"486","endLine":78,"endColumn":29,"suggestions":"536"},{"ruleId":"479","severity":1,"message":"483","line":33,"column":10,"nodeType":"481","messageId":"482","endLine":33,"endColumn":21},{"ruleId":"484","severity":1,"message":"485","line":45,"column":6,"nodeType":"486","endLine":45,"endColumn":8,"suggestions":"537"},{"ruleId":"484","severity":1,"message":"488","line":40,"column":6,"nodeType":"486","endLine":40,"endColumn":8,"suggestions":"538"},{"ruleId":"473","replacedBy":"539"},{"ruleId":"475","replacedBy":"540"},{"ruleId":"484","severity":1,"message":"521","line":32,"column":6,"nodeType":"486","endLine":32,"endColumn":12,"suggestions":"541"},{"ruleId":"502","severity":1,"message":"503","line":59,"column":67,"nodeType":"504","messageId":"505","endLine":59,"endColumn":69},{"ruleId":"479","severity":1,"message":"483","line":27,"column":10,"nodeType":"481","messageId":"482","endLine":27,"endColumn":21},{"ruleId":"484","severity":1,"message":"542","line":56,"column":6,"nodeType":"486","endLine":56,"endColumn":22,"suggestions":"543"},{"ruleId":"544","severity":1,"message":"545","line":29,"column":13,"nodeType":"546","endLine":33,"endColumn":15},{"ruleId":"479","severity":1,"message":"547","line":3,"column":9,"nodeType":"481","messageId":"482","endLine":3,"endColumn":20},{"ruleId":"479","severity":1,"message":"548","line":4,"column":9,"nodeType":"481","messageId":"482","endLine":4,"endColumn":26},{"ruleId":"479","severity":1,"message":"549","line":7,"column":9,"nodeType":"481","messageId":"482","endLine":7,"endColumn":26},{"ruleId":"479","severity":1,"message":"550","line":9,"column":9,"nodeType":"481","messageId":"482","endLine":9,"endColumn":21},{"ruleId":"479","severity":1,"message":"551","line":10,"column":8,"nodeType":"481","messageId":"482","endLine":10,"endColumn":14},"no-native-reassign",["552"],"no-negated-in-lhs",["553"],["552"],["553"],"@typescript-eslint/no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","'logoutState' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'logoutAction' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["554"],"React Hook useCallback has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["555"],"React Hook useEffect has a missing dependency: 'loadServices'. Either include it or remove the dependency array.",["556"],"'handleSubmit' is assigned a value but never used.","'register' is assigned a value but never used.","'modalType' is assigned a value but never used.","React Hook useCallback has missing dependencies: 'history' and 'toggleModal'. Either include them or remove the dependency array.",["557"],"'isThreadsLoading' is assigned a value but never used.","'isMessagesLoading' is assigned a value but never used.","'setUploadedFileName' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'loadMessagesList'. Either include it or remove the dependency array.",["558"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useCallback has missing dependencies: 'activeThread', 'resetMessage', 'scrollToBottom', and 'setErrorMessage'. Either include them or remove the dependency array.",["559"],"React Hook useEffect has a missing dependency: 'scrollToBottom'. Either include it or remove the dependency array.",["560"],"React Hook useCallback has missing dependencies: 'clearErrorsMessage', 'reset', and 'setError'. Either include them or remove the dependency array.",["561"],"'useCallback' is defined but never used.","'Moment' is defined but never used.","'isLoading' is assigned a value but never used.","'jsonRequest' is defined but never used.","'isSuccess' is assigned a value but never used.","'isError' is assigned a value but never used.","'json' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'confirmPayment'. Either include it or remove the dependency array.",["562"],"React Hook useEffect has a missing dependency: 'reset'. Either include it or remove the dependency array.",["563"],"'FunctionComponent' is defined but never used.","'paymentMethod' is assigned a value but never used.","'ListGroupItem' is defined but never used.","'SERVICES_LIST' is defined but never used.","React Hook useCallback has a missing dependency: 'history'. Either include it or remove the dependency array.",["564"],"'useFieldArray' is defined but never used.","'reset' is assigned a value but never used.","'values' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'loadSubCategories'. Either include it or remove the dependency array.",["565"],"'CREATE_SERVICE' is defined but never used.","React Hook useEffect has a missing dependency: 'loadService'. Either include it or remove the dependency array.",["566"],["567"],["568"],["552"],["553"],["569"],"React Hook useCallback has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useCallback call and refer to those specific props inside useCallback.",["570"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'useSelector' is defined but never used.","'getAuthorizedUser' is defined but never used.","'ADMIN_ORDERS_LIST' is defined but never used.","'SINGLE_ORDER' is defined but never used.","'moment' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"571","fix":"572"},{"desc":"573","fix":"574"},{"desc":"575","fix":"576"},{"desc":"577","fix":"578"},{"desc":"579","fix":"580"},{"desc":"581","fix":"582"},{"desc":"583","fix":"584"},{"desc":"585","fix":"586"},{"desc":"587","fix":"588"},{"desc":"589","fix":"590"},{"desc":"591","fix":"592"},{"desc":"593","fix":"594"},{"desc":"595","fix":"596"},{"desc":"571","fix":"597"},{"desc":"573","fix":"598"},{"desc":"589","fix":"599"},{"desc":"600","fix":"601"},"Update the dependencies array to be: [logoutAction, props]",{"range":"602","text":"603"},"Update the dependencies array to be: [dispatch]",{"range":"604","text":"605"},"Update the dependencies array to be: [loadServices, searchParams]",{"range":"606","text":"607"},"Update the dependencies array to be: [history, toggleModal]",{"range":"608","text":"609"},"Update the dependencies array to be: [activeThread, loadMessagesList]",{"range":"610","text":"611"},"Update the dependencies array to be: [activeThread, messagesList, offerId, resetMessage, scrollToBottom, setErrorMessage]",{"range":"612","text":"613"},"Update the dependencies array to be: [listRef, activeThread, scrollToBottom]",{"range":"614","text":"615"},"Update the dependencies array to be: [clearErrorsMessage, reset, setError]",{"range":"616","text":"617"},"Update the dependencies array to be: [confirmPayment]",{"range":"618","text":"619"},"Update the dependencies array to be: [reset, user]",{"range":"620","text":"621"},"Update the dependencies array to be: [history, searchParams]",{"range":"622","text":"623"},"Update the dependencies array to be: [loadSubCategories, parentId]",{"range":"624","text":"625"},"Update the dependencies array to be: [loadService, props.match.params.id]",{"range":"626","text":"627"},{"range":"628","text":"603"},{"range":"629","text":"605"},{"range":"630","text":"621"},"Update the dependencies array to be: [props]",{"range":"631","text":"632"},[2517,2519],"[logoutAction, props]",[1391,1393],"[dispatch]",[2019,2033],"[loadServices, searchParams]",[4186,4188],"[history, toggleModal]",[3573,3587],"[activeThread, loadMessagesList]",[5268,5291],"[activeThread, messagesList, offerId, resetMessage, scrollToBottom, setErrorMessage]",[5344,5367],"[listRef, activeThread, scrollToBottom]",[6762,6764],"[clearErrorsMessage, reset, setError]",[1642,1644],"[confirmPayment]",[1480,1486],"[reset, user]",[793,807],"[history, searchParams]",[1991,2001],"[loadSubCategories, parentId]",[2399,2422],"[loadService, props.match.params.id]",[1694,1696],[1394,1396],[1304,1310],[1734,1750],"[props]"]