[{"/var/www/html/fiverr_frontend/src/reportWebVitals.js":"1","/var/www/html/fiverr_frontend/src/routes/index.js":"2","/var/www/html/fiverr_frontend/src/api/request/request.ts":"3","/var/www/html/fiverr_frontend/src/api/request/header.ts":"4","/var/www/html/fiverr_frontend/src/api/config/fetch.config.ts":"5","/var/www/html/fiverr_frontend/src/lib/http/request.ts":"6","/var/www/html/fiverr_frontend/src/lib/http/header/compose.ts":"7","/var/www/html/fiverr_frontend/src/lib/http/header/header.ts":"8","/var/www/html/fiverr_frontend/src/lib/http/mime/mime.ts":"9","/var/www/html/fiverr_frontend/src/lib/http/exception/error.exception.ts":"10","/var/www/html/fiverr_frontend/src/lib/http/exception/http.exception.factory.ts":"11","/var/www/html/fiverr_frontend/src/lib/http/exception/http.exception.ts":"12","/var/www/html/fiverr_frontend/src/api/routing/routes/dashboard.ts":"13","/var/www/html/fiverr_frontend/src/api/routing/url.ts":"14","/var/www/html/fiverr_frontend/src/api/config/route.config.ts":"15","/var/www/html/fiverr_frontend/src/lib/location/query.string.ts":"16","/var/www/html/fiverr_frontend/src/containers/main/main.tsx":"17","/var/www/html/fiverr_frontend/src/containers/login/login.tsx":"18","/var/www/html/fiverr_frontend/src/containers/signup/signup.tsx":"19","/var/www/html/fiverr_frontend/src/containers/search/search.tsx":"20","/var/www/html/fiverr_frontend/src/containers/categories/categories.tsx":"21","/var/www/html/fiverr_frontend/src/containers/sellers/sellers.tsx":"22","/var/www/html/fiverr_frontend/src/containers/services/services.tsx":"23","/var/www/html/fiverr_frontend/src/containers/layout/layout.tsx":"24","/var/www/html/fiverr_frontend/src/components/service/service.tsx":"25","/var/www/html/fiverr_frontend/src/containers/service/service.tsx":"26","/var/www/html/fiverr_frontend/src/components/seller/seller.tsx":"27","/var/www/html/fiverr_frontend/src/components/image/image.tsx":"28","/var/www/html/fiverr_frontend/src/components/search/search.tsx":"29","/var/www/html/fiverr_frontend/src/index.tsx":"30","/var/www/html/fiverr_frontend/src/store/store.factory.ts":"31","/var/www/html/fiverr_frontend/src/app.tsx":"32","/var/www/html/fiverr_frontend/src/duck/_root/root.reducer.ts":"33","/var/www/html/fiverr_frontend/src/duck/_root/root.saga.ts":"34","/var/www/html/fiverr_frontend/src/duck/entity/entity.middleware.ts":"35","/var/www/html/fiverr_frontend/src/duck/entity/entity.action.ts":"36","/var/www/html/fiverr_frontend/src/duck/app/app.reducer.ts":"37","/var/www/html/fiverr_frontend/src/duck/app/app.saga.ts":"38","/var/www/html/fiverr_frontend/src/duck/app/app.action.ts":"39","/var/www/html/fiverr_frontend/src/duck/app/app.state.ts":"40","/var/www/html/fiverr_frontend/src/duck/entity/entity.reducer.ts":"41","/var/www/html/fiverr_frontend/src/duck/entity/entity.state.ts":"42","/var/www/html/fiverr_frontend/src/duck/entity/entity.model.ts":"43","/var/www/html/fiverr_frontend/src/duck/auth/auth.reducer.ts":"44","/var/www/html/fiverr_frontend/src/duck/auth/auth.action.ts":"45","/var/www/html/fiverr_frontend/src/duck/auth/auth.state.ts":"46","/var/www/html/fiverr_frontend/src/duck/entity/entity.schema.ts":"47","/var/www/html/fiverr_frontend/src/duck/auth/auth.saga.ts":"48","/var/www/html/fiverr_frontend/src/api/api/account/info.ts":"49","/var/www/html/fiverr_frontend/src/api/exception/index.ts":"50","/var/www/html/fiverr_frontend/src/duck/auth/auth.selector.ts":"51","/var/www/html/fiverr_frontend/src/duck/app/app.selector.ts":"52","/var/www/html/fiverr_frontend/src/duck/auth/model/authorized.user.ts":"53","/var/www/html/fiverr_frontend/src/duck/entity/selector/user.account.ts":"54","/var/www/html/fiverr_frontend/src/duck/entity/selector/_entity.ts":"55","/var/www/html/fiverr_frontend/src/duck/auth/hooks/useLogout.ts":"56","/var/www/html/fiverr_frontend/src/containers/dashboard/dashboard.tsx":"57","/var/www/html/fiverr_frontend/src/containers/dashboard/inbox.tsx":"58","/var/www/html/fiverr_frontend/src/containers/dashboard/earnings.tsx":"59","/var/www/html/fiverr_frontend/src/api/exception/validation/validation.exception.ts":"60","/var/www/html/fiverr_frontend/src/api/model/media.ts":"61","/var/www/html/fiverr_frontend/src/typings.d.ts":"62","/var/www/html/fiverr_frontend/src/components/service/service.short.tsx":"63","/var/www/html/fiverr_frontend/src/components/offer/offer.tsx":"64","/var/www/html/fiverr_frontend/src/api/exception/validation/validation.exception.factory.ts":"65","/var/www/html/fiverr_frontend/src/containers/dashboard/order/order.tsx":"66","/var/www/html/fiverr_frontend/src/api/model/order.ts":"67","/var/www/html/fiverr_frontend/src/containers/dashboard/order/payment.tsx":"68","/var/www/html/fiverr_frontend/src/containers/dashboard/order/stripe.payment.tsx":"69","/var/www/html/fiverr_frontend/src/containers/dashboard/order/paypal.payment.tsx":"70","/var/www/html/fiverr_frontend/src/containers/dashboard/order/orders.tsx":"71","/var/www/html/fiverr_frontend/src/containers/dashboard/profile/profile.tsx":"72","/var/www/html/fiverr_frontend/src/containers/layout/navbar.tsx":"73","/var/www/html/fiverr_frontend/src/containers/dashboard/services/services.tsx":"74"},{"size":362,"mtime":1609683422261,"results":"75","hashOfConfig":"76"},{"size":1153,"mtime":1625214326552,"results":"77","hashOfConfig":"76"},{"size":988,"mtime":1621348465341,"results":"78","hashOfConfig":"76"},{"size":297,"mtime":1597315550000,"results":"79","hashOfConfig":"76"},{"size":88,"mtime":1597315550000,"results":"80","hashOfConfig":"76"},{"size":543,"mtime":1597315556000,"results":"81","hashOfConfig":"76"},{"size":330,"mtime":1597315556000,"results":"82","hashOfConfig":"76"},{"size":203,"mtime":1597315556000,"results":"83","hashOfConfig":"76"},{"size":100,"mtime":1598871471000,"results":"84","hashOfConfig":"76"},{"size":90,"mtime":1597315556000,"results":"85","hashOfConfig":"76"},{"size":1205,"mtime":1597315556000,"results":"86","hashOfConfig":"76"},{"size":1604,"mtime":1613120144132,"results":"87","hashOfConfig":"76"},{"size":1487,"mtime":1625214801856,"results":"88","hashOfConfig":"76"},{"size":119,"mtime":1597315550000,"results":"89","hashOfConfig":"76"},{"size":79,"mtime":1597315550000,"results":"90","hashOfConfig":"76"},{"size":471,"mtime":1619992938075,"results":"91","hashOfConfig":"76"},{"size":514,"mtime":1625123675862,"results":"92","hashOfConfig":"76"},{"size":3160,"mtime":1622703470532,"results":"93","hashOfConfig":"76"},{"size":3028,"mtime":1623480455460,"results":"94","hashOfConfig":"76"},{"size":2892,"mtime":1622998470988,"results":"95","hashOfConfig":"76"},{"size":970,"mtime":1621328047888,"results":"96","hashOfConfig":"76"},{"size":1074,"mtime":1621788773507,"results":"97","hashOfConfig":"76"},{"size":2026,"mtime":1622998470968,"results":"98","hashOfConfig":"76"},{"size":591,"mtime":1625123627054,"results":"99","hashOfConfig":"76"},{"size":962,"mtime":1622998410900,"results":"100","hashOfConfig":"76"},{"size":9331,"mtime":1622711169749,"results":"101","hashOfConfig":"76"},{"size":734,"mtime":1621788773499,"results":"102","hashOfConfig":"76"},{"size":1065,"mtime":1623000402456,"results":"103","hashOfConfig":"76"},{"size":1181,"mtime":1620646674995,"results":"104","hashOfConfig":"76"},{"size":713,"mtime":1622630593181,"results":"105","hashOfConfig":"76"},{"size":885,"mtime":1621148087564,"results":"106","hashOfConfig":"76"},{"size":4337,"mtime":1625213961992,"results":"107","hashOfConfig":"76"},{"size":376,"mtime":1621148541440,"results":"108","hashOfConfig":"76"},{"size":158,"mtime":1597315555000,"results":"109","hashOfConfig":"76"},{"size":810,"mtime":1598871471000,"results":"110","hashOfConfig":"76"},{"size":670,"mtime":1597315554000,"results":"111","hashOfConfig":"76"},{"size":500,"mtime":1597315555000,"results":"112","hashOfConfig":"76"},{"size":527,"mtime":1621238611954,"results":"113","hashOfConfig":"76"},{"size":228,"mtime":1597315555000,"results":"114","hashOfConfig":"76"},{"size":150,"mtime":1597315555000,"results":"115","hashOfConfig":"76"},{"size":1069,"mtime":1597315554000,"results":"116","hashOfConfig":"76"},{"size":146,"mtime":1597315554000,"results":"117","hashOfConfig":"76"},{"size":75,"mtime":1597315554000,"results":"118","hashOfConfig":"76"},{"size":558,"mtime":1597315554000,"results":"119","hashOfConfig":"76"},{"size":688,"mtime":1621241189690,"results":"120","hashOfConfig":"76"},{"size":150,"mtime":1597315554000,"results":"121","hashOfConfig":"76"},{"size":106,"mtime":1621328178764,"results":"122","hashOfConfig":"76"},{"size":1117,"mtime":1621772007768,"results":"123","hashOfConfig":"76"},{"size":869,"mtime":1621772048984,"results":"124","hashOfConfig":"76"},{"size":56,"mtime":1597315550000,"results":"125","hashOfConfig":"76"},{"size":857,"mtime":1621792269979,"results":"126","hashOfConfig":"76"},{"size":424,"mtime":1597315555000,"results":"127","hashOfConfig":"76"},{"size":218,"mtime":1621327842372,"results":"128","hashOfConfig":"76"},{"size":371,"mtime":1621328092452,"results":"129","hashOfConfig":"76"},{"size":770,"mtime":1621328025880,"results":"130","hashOfConfig":"76"},{"size":911,"mtime":1621772487200,"results":"131","hashOfConfig":"76"},{"size":260,"mtime":1621787990511,"results":"132","hashOfConfig":"76"},{"size":15788,"mtime":1623754278643,"results":"133","hashOfConfig":"76"},{"size":256,"mtime":1621789573007,"results":"134","hashOfConfig":"76"},{"size":640,"mtime":1621791075575,"results":"135","hashOfConfig":"76"},{"size":169,"mtime":1620479057159,"results":"136","hashOfConfig":"76"},{"size":176,"mtime":1622631889053,"results":"137","hashOfConfig":"76"},{"size":1135,"mtime":1623001812884,"results":"138","hashOfConfig":"76"},{"size":3486,"mtime":1625213884192,"results":"139","hashOfConfig":"76"},{"size":657,"mtime":1620025671220,"results":"140","hashOfConfig":"76"},{"size":1631,"mtime":1624691501020,"results":"141","hashOfConfig":"76"},{"size":592,"mtime":1624691102468,"results":"142","hashOfConfig":"76"},{"size":3697,"mtime":1624698920727,"results":"143","hashOfConfig":"76"},{"size":1537,"mtime":1624698437303,"results":"144","hashOfConfig":"76"},{"size":762,"mtime":1624698977351,"results":"145","hashOfConfig":"76"},{"size":2270,"mtime":1625123223134,"results":"146","hashOfConfig":"76"},{"size":6723,"mtime":1625133128666,"results":"147","hashOfConfig":"76"},{"size":2678,"mtime":1625214863280,"results":"148","hashOfConfig":"76"},{"size":1957,"mtime":1625219618996,"results":"149","hashOfConfig":"76"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},"iua207",{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"157"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"157"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"157"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"157"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"157"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"157"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"157"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"157"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"276","usedDeprecatedRules":"157"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"283"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"286","usedDeprecatedRules":"157"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"295","usedDeprecatedRules":"157"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"300","usedDeprecatedRules":"157"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"303","usedDeprecatedRules":"157"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"308","usedDeprecatedRules":"157"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"311","usedDeprecatedRules":"157"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"314","messages":"315","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/var/www/html/fiverr_frontend/src/reportWebVitals.js",[],["316","317"],"/var/www/html/fiverr_frontend/src/routes/index.js",[],"/var/www/html/fiverr_frontend/src/api/request/request.ts",[],["318","319"],"/var/www/html/fiverr_frontend/src/api/request/header.ts",[],"/var/www/html/fiverr_frontend/src/api/config/fetch.config.ts",[],"/var/www/html/fiverr_frontend/src/lib/http/request.ts",[],"/var/www/html/fiverr_frontend/src/lib/http/header/compose.ts",[],"/var/www/html/fiverr_frontend/src/lib/http/header/header.ts",[],"/var/www/html/fiverr_frontend/src/lib/http/mime/mime.ts",[],"/var/www/html/fiverr_frontend/src/lib/http/exception/error.exception.ts",[],"/var/www/html/fiverr_frontend/src/lib/http/exception/http.exception.factory.ts",[],"/var/www/html/fiverr_frontend/src/lib/http/exception/http.exception.ts",[],"/var/www/html/fiverr_frontend/src/api/routing/routes/dashboard.ts",[],"/var/www/html/fiverr_frontend/src/api/routing/url.ts",[],"/var/www/html/fiverr_frontend/src/api/config/route.config.ts",[],"/var/www/html/fiverr_frontend/src/lib/location/query.string.ts",[],"/var/www/html/fiverr_frontend/src/containers/main/main.tsx",[],"/var/www/html/fiverr_frontend/src/containers/login/login.tsx",["320","321","322"],"import React, {useCallback, useState} from 'react';\nimport {\n    Card, CardBody,\n    CardTitle, Button, Form, FormGroup, Input\n} from 'reactstrap';\nimport Layout from \"../layout/layout\";\nimport {LOGIN} from \"../../api/routing/routes/dashboard\";\nimport {jsonRequest} from \"../../api/request/request\";\nimport {useDispatch} from \"react-redux\";\nimport {userAuthenticated} from \"../../duck/auth/auth.action\";\nimport {useForm} from \"react-hook-form\";\nimport {useHistory} from \"react-router\";\nimport {DASHBOARD} from \"../../routes\";\n\n\nconst Login = () => {\n\n    const [isLoggedIn, setLoggedIn] = useState(false);\n    const [errorMessage, setErrorMessage] = useState<string|undefined>(undefined);\n    const [isLoading, setLoading] = useState(false);\n\n    const dispatch = useDispatch();\n    const {register, handleSubmit} = useForm();\n\n    const submitForm = useCallback((values: any) => {\n        setLoading(true);\n        setErrorMessage(undefined);\n        const requestOptions = {\n            method: 'POST',\n            body: JSON.stringify({username: values.username, password: values.password})\n        };\n\n        jsonRequest(LOGIN, requestOptions)\n        .then(response => response.json())\n        .then(json => {\n            setLoggedIn(true);\n            dispatch(userAuthenticated(json.user));\n        }).catch(async (err) => {\n            let errorResponse = await err.response.json();\n            setErrorMessage(errorResponse.message);\n        }).finally(() => {\n            setLoading(false);\n        });\n\n    }, []);\n\n    return (\n        <Layout>\n            <div>\n                <Card>\n                    <CardBody className=\"container\">\n                        <CardTitle tag=\"h5\"> Sign In to {process.env.REACT_APP_WEBSITE_NAME} </CardTitle>\n                        {errorMessage !== undefined && (\n                            <div className=\"alert alert-danger\">{errorMessage}</div>\n                        )}\n\n                        {isLoggedIn && (\n                            <div className=\"alert alert-success\">Login was successful</div>\n                        )}\n\n                        <Form onSubmit={handleSubmit(submitForm)}>\n                            <FormGroup>\n                                <Input\n                                    type=\"text\"\n                                    {...register('username')}\n                                    id=\"username\"\n                                    placeholder=\"User Name\"\n                                />\n                            </FormGroup>\n                            <FormGroup>\n                                <Input\n                                    type=\"password\"\n                                    {...register('password')}\n                                    id=\"examplePassword\"\n                                    placeholder=\"Password\"\n                                />\n                            </FormGroup>\n                            <Button type=\"submit\" disabled={isLoading}>Submit</Button>\n                        </Form>\n                    </CardBody>\n                </Card>\n            </div>\n        </Layout>\n    );\n};\n\nexport default Login;","/var/www/html/fiverr_frontend/src/containers/signup/signup.tsx",["323","324","325"],"import React, { useState } from 'react';\nimport {\n  Card, CardBody,\n  CardTitle, Button, Form, FormGroup, Input\n} from 'reactstrap';\nimport Layout from \"../layout/layout\";\nimport {jsonRequest} from \"../../api/request/request\";\nimport {CATEGORIES_LIST, REGISTER} from \"../../api/routing/routes/dashboard\";\nimport {useForm} from \"react-hook-form\";\n\nconst Signup = () => {\n\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [username, setUserName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  \n  const {handleSubmit, register} = useForm();\n\n  const submitForm = () => {\n\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ firstName, lastName, username, email, password })\n    };\n\n    jsonRequest(REGISTER, requestOptions)\n        .then(response => response.json())\n        .then(json => {});\n  };\n\n  return (\n    <Layout>\n      <div>\n        <Card>\n          <CardBody className=\"container\">\n            <CardTitle tag=\"h5\"> Create Your Account</CardTitle>\n            <Form>\n              <FormGroup>\n                <Input\n                  type=\"text\"\n                  name=\"firstname\"\n                  id=\"firstname\"\n                  placeholder=\"First Name\"\n                  value={firstName}\n                  onChange={(e) => setFirstName(e.target.value)}\n                />\n              </FormGroup>\n              <FormGroup>\n                <Input\n                  type=\"text\"\n                  name=\"lastname\"\n                  id=\"lastname\"\n                  placeholder=\"Last Name\"\n                  value={lastName}\n                  onChange={(e) => setLastName(e.target.value)}\n                />\n              </FormGroup>\n              <FormGroup>\n                <Input\n                  type=\"text\"\n                  name=\"username\"\n                  id=\"username\"\n                  placeholder=\"User Name\"\n                  value={username}\n                  onChange={(e) => setUserName(e.target.value)}\n                />\n              </FormGroup>\n              <FormGroup>\n                <Input\n                  type=\"email\"\n                  name=\"email\"\n                  id=\"exampleEmail\"\n                  placeholder=\"Email/User Name\"\n                  value={email}\n                  onChange={(e) => setEmail(e.target.value)}\n                />\n              </FormGroup>\n              <FormGroup>\n                <Input\n                  type=\"password\"\n                  name=\"Password\"\n                  id=\"examplePassword\"\n                  placeholder=\"Password\"\n                  value={password}\n                  onChange={(e) => setPassword(e.target.value)}\n                />\n              </FormGroup>\n              <Button onClick={submitForm}>Signup</Button>\n            </Form>\n          </CardBody>\n        </Card>\n      </div>\n    </Layout>\n  );\n};\n\nexport default Signup;","/var/www/html/fiverr_frontend/src/containers/search/search.tsx",["326","327","328","329","330","331"],"import React, {useState, useEffect, useMemo, FunctionComponent} from \"react\";\nimport Layout from \"../layout/layout\";\nimport {jsonRequest} from \"../../api/request/request\";\nimport {SERVICES_LIST} from \"../../api/routing/routes/dashboard\";\nimport {Col, Row} from \"reactstrap\";\nimport Categories from \"../categories/categories\";\nimport Services from \"../services/services\";\nimport Sellers from \"../sellers/sellers\";\nimport Service from \"../../components/service/service\";\nimport {Service as ServiceModel} from '../../api/model/service';\nimport {RouteComponentProps, useLocation} from \"react-router\";\nimport {QueryString} from \"../../lib/location/query.string\";\nimport FormGroup from \"reactstrap/es/FormGroup\";\nimport {Input} from \"reactstrap/es\";\nimport {Search as SearchBar} from \"../../components/search/search\";\nimport {Link} from \"react-router-dom\";\nimport {SERVICE_ROUTE} from \"../../routes\";\n\nexport interface SearchProps{}\n\nexport interface RequestProps{\n  s?: string;\n  limit?: string;\n  offset?: string;\n  orderBy?: string;\n  orderMode?: string;\n  categories?: string[];\n  minPrice?: string;\n  maxPrice?: string;\n}\n\nconst Search: FunctionComponent<SearchProps> = (props) => {\n  const [services, setServices] = useState<ServiceModel[]>([]);\n\n  const location = useLocation();\n\n  const searchParams = useMemo(() => {\n    return QueryString.parse(location.search);\n  }, [location.search]);\n\n  const loadServices = async () => {\n    let queryString = QueryString.stringify(searchParamsToRequestParams(searchParams));\n    let response, list;\n    try {\n      response = await jsonRequest(`${SERVICES_LIST}?${queryString}`);\n      list = await response.json();\n    }catch(exception){\n      console.log(exception);\n    }\n\n    setServices(list.list);\n  };\n\n  const searchParamsToRequestParams = (values: any) => {\n    let data: RequestProps = {\n      s: values.s,\n      limit: values.limit,\n      offset: values.offset,\n      orderBy: values.orderBy,\n      orderMode: values.orderMode,\n      categories: values.categoryId,\n      minPrice: values.minPrice,\n      maxPrice: values.maxPrice\n    };\n\n    return data;\n  };\n\n  useEffect(() => {\n    loadServices();\n  }, [searchParams]);\n\n  return (\n    <Layout>\n      <Row>\n        <Col xs={12} lg={3}>\n          <Categories />\n        </Col>\n        <Col xs={12} lg={9}>\n          <Row>\n            <Col lg={12}>\n              <SearchBar />\n            </Col>\n          </Row>\n          <Row>\n            {services.map((service, index) => {\n              return (\n                <Col xs={12} lg={4} key={index}>\n                  <Link to={SERVICE_ROUTE.replace(':id', service.id.toString())} style={{textDecoration: 'none'}}>\n                    <Service service={service} />\n                  </Link>\n                </Col>\n              );\n            })}\n          </Row>\n        </Col>\n      </Row>\n    </Layout>\n  );\n};\n\nexport default Search;","/var/www/html/fiverr_frontend/src/containers/categories/categories.tsx",["332","333"],"import React, {useState, useEffect} from 'react';\nimport { ListGroup, ListGroupItem } from 'reactstrap';\nimport {jsonRequest} from \"../../api/request/request\";\nimport {CATEGORIES_LIST, SERVICES_LIST} from \"../../api/routing/routes/dashboard\";\nimport {SEARCH_ROUTE} from \"../../routes\";\nimport {Link} from \"react-router-dom\";\nimport {Category} from \"../../api/model/category\";\n\nconst Categories = () => {\n  const [categories, setCategories] = useState<Category[]>([]);\n\n  const loadCategories = () => {\n    jsonRequest(CATEGORIES_LIST)\n      .then(response => response.json())\n      .then(json => {\n        setCategories(json.list);\n      });\n  };\n\n  useEffect(() => {\n    loadCategories();\n  }, []);\n\n\n  return (\n    <ListGroup>\n      {categories.map((cat, index) => (\n        <Link to={`${SEARCH_ROUTE}?categoryId[]=${cat.id}`} className=\"list-group-item\" key={index}>\n          {cat.name}\n        </Link>\n      ))}\n    </ListGroup>\n  );\n};\n\nexport default Categories;\n","/var/www/html/fiverr_frontend/src/containers/sellers/sellers.tsx",[],"/var/www/html/fiverr_frontend/src/containers/services/services.tsx",["334","335"],"import React, {useEffect, useState} from 'react';\nimport Carousel from 'react-multi-carousel';\nimport 'react-multi-carousel/lib/styles.css';\nimport {\n    FormGroup, Input, Row, Col\n} from 'reactstrap';\nimport Service from '../../components/service/service';\nimport {Service as ServiceModel} from \"../../api/model/service\";\nimport {jsonRequest} from \"../../api/request/request\";\nimport {FEATURED_SERVICES_LIST} from \"../../api/routing/routes/dashboard\";\nimport {Search as SearchBar} from '../../components/search/search';\n\nconst Services = () => {\n    const responsive = {\n        superLargeDesktop: {\n            // the naming can be any, depends on you.\n            breakpoint: { max: 4000, min: 3000 },\n            items: 5\n        },\n        desktop: {\n            breakpoint: { max: 3000, min: 1024 },\n            items: 3\n        },\n        tablet: {\n            breakpoint: { max: 1024, min: 464 },\n            items: 2\n        },\n        mobile: {\n            breakpoint: { max: 464, min: 0 },\n            items: 1\n        }\n    };\n\n    const [services, setServices] = useState<ServiceModel[]>([]);\n\n    const loadServices = async () => {\n        let response, list;\n        try {\n            response = await jsonRequest(`${FEATURED_SERVICES_LIST}`);\n            list = await response.json();\n        }catch(exception){\n            console.log(exception);\n        }\n\n        setServices(list.list);\n    };\n\n    useEffect(() => {\n        loadServices();\n    }, []);\n\n    return (\n        <React.Fragment>\n\n            <Row>\n                <Col lg={12}>\n                    <SearchBar />\n                </Col>\n            </Row>\n            <h3>Featured services</h3>\n            <Row>\n                <Col>\n                    <Carousel responsive={responsive}>\n                        {services.map((service, index) => {\n                            return (\n                                <Service key={index} service={service} />\n                            );\n                        })}\n                    </Carousel>\n                </Col>\n            </Row>\n        </React.Fragment>\n    );\n};\n\nexport default Services;","/var/www/html/fiverr_frontend/src/containers/layout/layout.tsx",[],"/var/www/html/fiverr_frontend/src/components/service/service.tsx",[],"/var/www/html/fiverr_frontend/src/containers/service/service.tsx",["336","337","338"],"import React, {FunctionComponent, useCallback, useEffect, useState} from \"react\";\nimport {RouteComponentProps, useHistory} from \"react-router\";\nimport Layout from \"../layout/layout\";\nimport {Service as ServiceModel} from \"../../api/model/service\";\nimport {jsonRequest} from \"../../api/request/request\";\nimport {CREATE_THREAD, GET_SERVICE} from \"../../api/routing/routes/dashboard\";\nimport {\n  Button,\n  Col,\n  FormGroup,\n  Label,\n  Modal,\n  ModalBody,\n  ModalFooter,\n  ModalHeader,\n  Nav,\n  NavItem,\n  NavLink,\n  Row,\n  TabContent,\n  TabPane\n} from \"reactstrap/es\";\nimport {Image} from \"../../components/image/image\";\nimport classnames from 'classnames';\nimport {Package} from \"../../api/model/package\";\nimport {Seller} from \"../../api/model/seller\";\nimport {useForm} from \"react-hook-form\";\nimport {ValidationException} from \"../../api/exception/validation/validation.exception\";\nimport {ConstraintViolation} from \"../../lib/validator/validation.result\";\nimport {useSelector} from \"react-redux\";\nimport {getAuthorizedUser} from \"../../duck/auth/auth.selector\";\nimport {LOGIN, SINGLE_MESSAGE} from \"../../routes\";\n\nexport interface ServiceProps extends RouteComponentProps<{ id: string }> {\n\n}\n\nexport const Service: FunctionComponent<ServiceProps> = (props) => {\n  const [service, setService] = useState<ServiceModel>();\n  const [isLoading, setLoading] = useState(false);\n  const [isSendingMessage, setSendingMessage] = useState(false);\n  const [activeTab, setActiveTab] = useState(0);\n  const [modal, setModal] = useState(false);\n  const [modalType, setModalType] = useState('');\n  const [selectedSeller, setSelectedSeller] = useState<Seller | undefined>();\n  const [selectedService, setSelectedService] = useState<ServiceModel | undefined>();\n  const [selectedPackage, setSelectedPackage] = useState<Package | undefined>();\n  const [errorMessage, setErrorMessage] = useState<string | undefined>();\n  const {register, handleSubmit} = useForm();\n  \n  const toggleModal = () => setModal(!modal);\n  \n  const toggleTabs = (tab: number) => {\n    if (activeTab !== tab) setActiveTab(tab);\n  };\n  \n  const user = useSelector(getAuthorizedUser);\n  const history = useHistory();\n  \n  const loadService = async (id: string) => {\n    let response, list;\n    setLoading(true);\n    try {\n      response = await jsonRequest(`${GET_SERVICE.replace(':id', id)}`);\n      list = await response.json();\n    } catch (exception) {\n      // console.log(exception);\n    } finally {\n      setLoading(false);\n    }\n    \n    setService(list.service);\n  };\n  \n  useEffect(() => {\n    loadService(props.match.params.id);\n  }, [props.match.params.id]);\n  \n  const contactSeller = (sellerId: string) => {\n    setModalType('contact');\n  \n    setSelectedSeller(service?.seller);\n    setSelectedPackage(undefined);\n    setSelectedService(undefined);\n    \n    toggleModal();\n  };\n  \n  const createOrder = (seller: Seller, service: ServiceModel, pack: Package) => {\n    if(user !== null) {\n      setSelectedSeller(seller);\n      setSelectedPackage(pack);\n      setSelectedService(service);\n  \n      setModalType('contact');\n      toggleModal();\n    }else{\n      history.push(`${LOGIN}?ref=${props.match.path.replace(':id', service.id.toString())}`);\n    }\n  };\n  \n  const onSubmit = useCallback(async (values) => {\n    setSendingMessage(true);\n    try {\n      let response = await jsonRequest(CREATE_THREAD, {\n        body: JSON.stringify(values),\n        method: 'post'\n      });\n      \n      let json = await response.json();\n      history.push(SINGLE_MESSAGE.replace(':id', json.message.threadId));\n      \n      toggleModal();\n    } catch (exception) {\n      let exceptionResponse = await exception.response.json();\n      \n      if(exceptionResponse.message){\n        setErrorMessage(exceptionResponse.message);\n      }\n      \n      if (exceptionResponse.errorMessage) {\n        setErrorMessage(exceptionResponse.errorMessage);\n      }\n      \n      if (exceptionResponse.violations.length) {\n        setErrorMessage(exceptionResponse.violations.map((error: ConstraintViolation) => {\n          return `${error.propertyPath}: ${error.errorMessage}`;\n        }).join('<br/>'))\n      }\n    } finally {\n      setSendingMessage(false);\n    }\n  }, []);\n  \n  return (\n    <Layout isLoading={isLoading}>\n      <Row>\n        {service && (\n          <>\n            <Col md={8}>\n              <h1>{service.title}</h1>\n              <Image image={service.seller.profilePicture} h={36} w={36} fit=\"crop\" circle/>\n              {' '}{service?.seller.name}\n              <Row className=\"mt-3\">\n                <Col>\n                  {service.images.length > 0 && (\n                    <Image image={service.images[0]}/>\n                  )}\n                </Col>\n              </Row>\n              <Row className=\"mt-3\">\n                <Col>\n                  <h3>About Service</h3>\n                  <p>\n                    {service.description}\n                  </p>\n                </Col>\n              </Row>\n              <Row>\n                <Col>\n                  <h3>About Seller</h3>\n                  <p>\n                    <Row>\n                      <Col className=\"col-3\">\n                        <Image image={service.seller.profilePicture} w={100}/>\n                      </Col>\n                      <Col>\n                        {service?.seller.name}\n                        <br/>\n                        <Button color=\"primary\" onClick={() => {\n                          contactSeller(service.seller.id.toString())\n                        }}>\n                          Contact me\n                        </Button>\n                      </Col>\n                    </Row>\n                  </p>\n                  <p>\n                    {service.seller.description}\n                  </p>\n                  \n                  <h3>Reviews</h3>\n                  <p className=\"p-5 text-center bg-dark text-light h5\">Nothing yet</p>\n                </Col>\n              </Row>\n            </Col>\n            <Col md={4}>\n              <div style={{position: 'sticky', top: '1rem'}}>\n                <Nav pills fill>\n                  {service.packages.map((pack: Package, index) => (\n                    <NavItem key={index}>\n                      <NavLink\n                        className={classnames({active: activeTab === index})}\n                        onClick={() => {\n                          toggleTabs(index);\n                        }}\n                      >\n                        {pack.name}\n                      </NavLink>\n                    </NavItem>\n                  ))}\n                </Nav>\n                <TabContent activeTab={activeTab}>\n                  {service.packages.map((pack: Package, index) => (\n                    <TabPane tabId={index} className=\"mt-5\" key={index}>\n                      <Row>\n                        <Col sm=\"12\">\n                          <h5 className=\"mb-5\">\n                            {pack.name}\n                            <span className=\"float-right\">${pack.price}</span>\n                          </h5>\n                          <p>{pack.description}</p>\n                          <p><i className=\"fa fa-clock\"></i> {pack.duration}</p>\n                          <ul>\n                            {pack.itemsIncluded.map(item => (\n                              <li>{item}</li>\n                            ))}\n                          </ul>\n                          <Button block color=\"success\" onClick={() =>\n                            createOrder(service.seller, service, pack)\n                          }>\n                            Continue (${pack.price})\n                          </Button>\n                        </Col>\n                      </Row>\n                    </TabPane>\n                  ))}\n                </TabContent>\n              </div>\n            </Col>\n          </>\n        )}\n      </Row>\n      <div>\n        <Modal isOpen={modal} toggle={toggleModal} size=\"lg\" fade={false} backdrop=\"static\">\n          <ModalHeader toggle={toggleModal}>To {selectedSeller && selectedSeller.name}</ModalHeader>\n          <form onSubmit={handleSubmit(onSubmit)} action={CREATE_THREAD} method={'POST'}>\n            <ModalBody>\n              {errorMessage && (\n                <div className=\"alert alert-danger\">{errorMessage}</div>\n              )}\n              {selectedService && selectedPackage && selectedSeller && (\n                <>\n                  <p>Service: {selectedService.title}</p>\n                  <p>Package: {selectedPackage.name}</p>\n                  <p>Price: ${selectedPackage.price}</p>\n                  <input type=\"hidden\" {...register('serviceId')} value={selectedService.id}/>\n                  <input type=\"hidden\" {...register('packageId')} value={selectedPackage.id}/>\n                  <input type=\"hidden\" {...register('sellerId')} value={selectedSeller.id}/>\n                </>\n              )}\n              <FormGroup>\n                <Label>Message</Label>\n                <textarea className=\"form-control\" {...register('message', {required: true})} />\n              </FormGroup>\n            </ModalBody>\n            <ModalFooter>\n              <Button color=\"success\" type=\"submit\" disabled={isSendingMessage}>Send Message</Button>\n            </ModalFooter>\n          </form>\n        </Modal>\n      </div>\n    </Layout>\n  );\n};","/var/www/html/fiverr_frontend/src/components/seller/seller.tsx",[],"/var/www/html/fiverr_frontend/src/components/image/image.tsx",["339"],"import React, {FunctionComponent} from 'react';\nimport {Media} from \"../../api/model/media\";\nimport {MEDIA_URL} from \"../../api/routing/routes/dashboard\";\nimport {QueryString} from \"../../lib/location/query.string\";\n\nexport interface ImageProps {\n    image?: Media;\n    h?: number;\n    w?: number;\n    fit?: \"crop\"|\"contain\"|\"max\"|\"fill\"|\"stretch\";\n    q?: number;\n    circle?: boolean;\n    default?: string;\n    fm?: \"webp\"|\"jpg\"|\"pjpg\"|\"png\"|\"gif\"\n}\n\nexport const Image: FunctionComponent<ImageProps> = ({image, h, w, q, fit, circle, default: defaultImage, fm}) => {\n    let id = 'default';\n    if(typeof image === 'object' && image !== null){\n        id = image?.id.toString();\n    }\n    \n    let query = QueryString.stringify({\n        q, w, h, fit, default: defaultImage, fm: fm || \"webp\"\n    });\n    \n    return (\n        <>\n            <img\n                src={`${MEDIA_URL.replace(':id', id)}?${query}`}\n                alt={image?.orgFileName}\n                className={`img-fluid${circle ? ' rounded-circle' : ''}`}\n            />\n        </>\n    );\n};\n","/var/www/html/fiverr_frontend/src/components/search/search.tsx",["340"],"import React, {FunctionComponent, useCallback, useMemo} from \"react\";\nimport {Form, FormGroup, Input} from \"reactstrap/es\";\nimport {SEARCH_ROUTE} from \"../../routes\";\nimport {useHistory, useLocation} from \"react-router\";\nimport {QueryString} from \"../../lib/location/query.string\";\nimport {useForm} from \"react-hook-form\";\n\n\nexport const Search: FunctionComponent = () => {\n\n    const location = useLocation();\n    const history = useHistory();\n    const {register, handleSubmit} = useForm();\n\n    const searchParams = useMemo(() => {\n        return QueryString.parse(location.search);\n    }, [location.search]);\n\n    const onSubmit = useCallback((values) => {\n        let qs = QueryString.stringify({...searchParams, s: values.s});\n        history.push(`${SEARCH_ROUTE}?${qs}`);\n    }, [searchParams]);\n\n    return (\n        <Form onSubmit={handleSubmit(onSubmit)} action={SEARCH_ROUTE}>\n            <FormGroup>\n                <Input\n                    type=\"search\"\n                    {...register('s')}\n                    placeholder=\"Search services...\"\n                    defaultValue={searchParams.s}\n                />\n            </FormGroup>\n        </Form>\n    );\n};","/var/www/html/fiverr_frontend/src/index.tsx",[],"/var/www/html/fiverr_frontend/src/store/store.factory.ts",[],"/var/www/html/fiverr_frontend/src/app.tsx",["341","342"],"/var/www/html/fiverr_frontend/src/duck/_root/root.reducer.ts",[],"/var/www/html/fiverr_frontend/src/duck/_root/root.saga.ts",[],"/var/www/html/fiverr_frontend/src/duck/entity/entity.middleware.ts",[],"/var/www/html/fiverr_frontend/src/duck/entity/entity.action.ts",[],"/var/www/html/fiverr_frontend/src/duck/app/app.reducer.ts",[],"/var/www/html/fiverr_frontend/src/duck/app/app.saga.ts",[],"/var/www/html/fiverr_frontend/src/duck/app/app.action.ts",[],"/var/www/html/fiverr_frontend/src/duck/app/app.state.ts",[],"/var/www/html/fiverr_frontend/src/duck/entity/entity.reducer.ts",[],"/var/www/html/fiverr_frontend/src/duck/entity/entity.state.ts",[],"/var/www/html/fiverr_frontend/src/duck/entity/entity.model.ts",[],"/var/www/html/fiverr_frontend/src/duck/auth/auth.reducer.ts",[],"/var/www/html/fiverr_frontend/src/duck/auth/auth.action.ts",[],"/var/www/html/fiverr_frontend/src/duck/auth/auth.state.ts",[],"/var/www/html/fiverr_frontend/src/duck/entity/entity.schema.ts",[],"/var/www/html/fiverr_frontend/src/duck/auth/auth.saga.ts",[],"/var/www/html/fiverr_frontend/src/api/api/account/info.ts",[],"/var/www/html/fiverr_frontend/src/api/exception/index.ts",[],"/var/www/html/fiverr_frontend/src/duck/auth/auth.selector.ts",[],"/var/www/html/fiverr_frontend/src/duck/app/app.selector.ts",[],"/var/www/html/fiverr_frontend/src/duck/auth/model/authorized.user.ts",[],"/var/www/html/fiverr_frontend/src/duck/entity/selector/user.account.ts",[],"/var/www/html/fiverr_frontend/src/duck/entity/selector/_entity.ts",[],"/var/www/html/fiverr_frontend/src/duck/auth/hooks/useLogout.ts",[],"/var/www/html/fiverr_frontend/src/containers/dashboard/dashboard.tsx",[],"/var/www/html/fiverr_frontend/src/containers/dashboard/inbox.tsx",["343","344","345","346","347","348","349","350","351"],"import React, {createRef, FunctionComponent, useCallback, useEffect, useState} from 'react';\nimport Layout from \"../layout/layout\";\nimport {RouteComponentProps} from \"react-router\";\nimport {jsonRequest, request} from \"../../api/request/request\";\nimport {\n  CREATE_OFFER,\n  MEDIA_DOWNLOAD_URL,\n  SEND_MESSAGE,\n  THREAD_MESSAGES,\n  THREADS_LIST\n} from \"../../api/routing/routes/dashboard\";\nimport {Thread} from \"../../api/model/thread\";\nimport {Message} from \"../../api/model/message\";\nimport {Link} from \"react-router-dom\";\nimport {SINGLE_MESSAGE} from \"../../routes\";\nimport {Image} from \"../../components/image/image\";\nimport {useForm} from \"react-hook-form\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faPaperclip, faPaperPlane, faPencilAlt} from \"@fortawesome/free-solid-svg-icons\";\nimport TimeAgo from 'react-timeago'\nimport {Button, Modal, ModalBody, ModalFooter, ModalHeader, Row, Tooltip} from \"reactstrap/es\";\nimport {ConstraintViolation} from \"../../lib/validator/validation.result\";\nimport {useSelector} from \"react-redux\";\nimport {getAuthorizedUser} from \"../../duck/auth/auth.selector\";\nimport {ServiceShort} from \"../../components/service/service.short\";\nimport {Service} from \"../../api/model/service\";\nimport _ from 'lodash';\nimport { Offer } from '../../components/offer/offer';\n\nexport interface InboxProps extends RouteComponentProps<{ id: string }> {\n\n}\n\nexport const Inbox: FunctionComponent<InboxProps> = (props) => {\n  \n  const [threadList, setThreadList] = useState<Thread[]>([]);\n  const [isThreadsLoading, setIsThreadsLoading] = useState(false);\n  const [isMessagesLoading, setIsMessagesLoading] = useState(false);\n  const [activeThread, setActiveThread] = useState<Thread | undefined>();\n  const [messagesList, setMessagesList] = useState<Message[]>([]);\n  const listRef = createRef<HTMLDivElement>();\n  const [isMessageSending, setMessageSending] = useState(false);\n  const [uploadedFileName, setUploadedFileName] = useState('');\n  const [modal, setModal] = useState(false);\n  const toggleModal = () => setModal(!modal);\n  const user = useSelector(getAuthorizedUser);\n  const [offerService, setOfferService] = useState<Service | undefined>();\n  const [offerId, setOfferId] = useState<number | undefined>();\n  \n  //offer form handler\n  const {handleSubmit, register, setError, formState: {errors}, reset} = useForm();\n  //message form handler\n  const {handleSubmit: handleSubmitMessage, register: registerMessage, setError: setErrorMessage, formState: {errors: errorsMessage}, reset: resetMessage, clearErrors: clearErrorsMessage} = useForm();\n  \n  const loadThreadsList = async () => {\n    setIsThreadsLoading(true);\n    try {\n      let response = await jsonRequest(THREADS_LIST);\n      let threadList = await response.json();\n      \n      setThreadList(threadList.threads);\n    } catch (exception) {\n    \n    } finally {\n      setIsThreadsLoading(false);\n    }\n  };\n  \n  const loadMessagesList = async () => {\n    if (activeThread) {\n      setIsMessagesLoading(true);\n      try {\n        let response = await jsonRequest(THREAD_MESSAGES.replace(':id', activeThread?.id.toString()));\n        let messagesList = await response.json();\n        \n        setMessagesList(messagesList.messages);\n      } catch (exception) {\n      \n      } finally {\n        setIsMessagesLoading(false);\n      }\n    }\n  };\n  \n  useEffect(() => {\n    loadThreadsList();\n  }, []);\n  \n  useEffect(() => {\n    loadMessagesList();\n  }, [activeThread]);\n  \n  useEffect(() => {\n    let filterThread = threadList.filter(thread => thread.id.toString() === props.match.params.id);\n    if (filterThread.length > 0) {\n      setActiveThread(filterThread[0]);\n    } else {\n      if (threadList.length > 0) {\n        setActiveThread(threadList[0]);\n      }\n    }\n  }, [props.match.params.id, threadList]);\n  \n  const sendMessage = useCallback(async (values) => {\n    \n    if (!activeThread) {\n      return false;\n    }\n    \n    setMessageSending(true);\n    let queryString = new FormData();\n    if(values.message) {\n      queryString.append('message', values.message);\n    }\n    if(values.file) {\n      queryString.append('file', values.file[0]);\n    }\n    if(offerId){\n      queryString.append('offerId', offerId.toString());\n    }\n    \n    try {\n      let response = await request(SEND_MESSAGE.replace(':id', activeThread.id.toString()), {\n        body: queryString,\n        method: 'POST',\n      });\n      \n      let message = await response.json();\n      setMessagesList([...messagesList, message.message]);\n      scrollToBottom();\n      resetMessage({\n        message: ''\n      });\n      setOfferService(undefined);\n      setOfferId(undefined);\n    } catch (exception) {\n      let expResponse = await exception.response.json();\n      if (expResponse.code === 422) {\n        if (expResponse.violations) {\n          expResponse.violations.map((error: ConstraintViolation) => {\n            setErrorMessage(error.propertyPath, {\n              type: 'manual',\n              message: error.errorMessage\n            });\n          });\n        }\n      }\n      throw exception;\n    } finally {\n      setMessageSending(false);\n    }\n    \n  }, [messagesList, offerId]);\n  \n  useEffect(() => {\n    scrollToBottom();\n  }, [listRef, activeThread]);\n  \n  const scrollToBottom = useCallback(() => {\n    if (listRef.current) {\n      listRef.current.scrollTop = listRef.current.scrollHeight - listRef.current.clientHeight;\n    }\n  }, [listRef]);\n  \n  const [creatingOffer, setCreatingOffer] = useState(false);\n  \n  const onCreateOffer = useCallback(async (values) => {\n    setCreatingOffer(true);\n    \n    let queryString = JSON.stringify({\n      serviceId: values.serviceId,\n      price: +values.price,\n      description: values.description,\n      duration: values.delivery_duration\n    });\n    \n    try{\n      let response = await jsonRequest(CREATE_OFFER, {\n        method: 'POST',\n        body: queryString\n      });\n      let json = await response.json();\n  \n      await setOfferId(json.offer.id);\n      setModal(false);\n      setOfferService(undefined);\n      reset({\n        price: '',\n        description: '',\n        duration: ''\n      });\n  \n      clearErrorsMessage();\n    }catch(exception){\n      let expResponse = await exception.response.json();\n      if (expResponse.code === 422) {\n        if (expResponse.violations) {\n          expResponse.violations.map((error: ConstraintViolation) => {\n            setError(error.propertyPath, {\n              type: 'manual',\n              message: error.errorMessage\n            });\n          });\n        }\n      }\n    }finally{\n      setCreatingOffer(false);\n    }\n    \n  }, []);\n  \n  const [tooltipOpen, setTooltipOpen] = useState(false);\n  \n  const tooltipToggle = () => setTooltipOpen(!tooltipOpen);\n  \n  return (\n    <Layout>\n      <h1>Inbox</h1>\n      <div className=\"container-fluid inbox\">\n        <div className=\"row\">\n          <nav className=\"col-md-3 d-none d-md-block bg-light sidebar p-0\">\n            <div className=\"sidebar-sticky\">\n              <ul className=\"nav flex-column\">\n                {threadList.map((thread, index) => (\n                  <li className={`nav-item${thread === activeThread ? ' active' : ''}`}\n                    onClick={() => setActiveThread(thread)}\n                    key={index}>\n                    <Link to={SINGLE_MESSAGE.replace(':id', thread.id.toString())}\n                      className=\"nav-link contact-item\">\n                      <div className=\"thread-image-placeholder\">\n                        <Image image={thread.recipient.profilePicture}\n                          w={45}\n                          h={45}\n                          circle\n                          fit=\"crop\"\n                          default=\"profile\" />\n                      </div>\n                      <div className=\"thread-user-info\">\n                        <span className=\"ml-2\">{thread.recipient.displayName}</span>\n                        <span className=\"float-right thread-time\">\n                          <TimeAgo date={thread.message.createdAt} />\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\n                        <div className=\"thread-latest-message\">\n                          <span className=\"ml-2\">{thread.message.message}</span>\n                        </div>\n                      </div>\n                    </Link>\n                  </li>\n                ))}\n              </ul>\n            </div>\n          </nav>\n          <div className=\"col-md-9 p-0 message-header\">\n            {activeThread && (\n              <>\n                <div className=\"p-2 bg-light\">\n                  <div className=\"thread-image-placeholder\">\n                    <Image image={activeThread.recipient.profilePicture}\n                      w={45}\n                      h={45}\n                      circle\n                      fit=\"crop\"\n                      default=\"profile\" />\n                  </div>\n                  <div className=\"thread-user-info\">\n                    <span className=\"ml-2\">{activeThread.recipient.displayName}</span>\n                  </div>\n                </div>\n                <div className=\"messages-list\"\n                  ref={listRef}>\n                  {messagesList.map((message, index) => {\n                    let profilePicture = message.sender.profilePicture;\n                    let name = message.sender.displayName;\n                    return (\n                      <div key={index}\n                        className=\"message\">\n                        <div className=\"message-image-placeholder\">\n                          <Image image={profilePicture}\n                            w={45}\n                            h={45}\n                            circle\n                            fit=\"crop\"\n                            default=\"profile\" />\n                        </div>\n                        <div className=\"message-user-info\">\n                          <div className=\"\">\n                            {name}\n                            <TimeAgo date={message.createdAt}\n                              className=\"text-xs ml-2 text-black-50\" />\n                          </div>\n                          <div className=\"\">\n                            {message.message}\n                            {message.offer !== null && (\n                              <Offer offer={message.offer} onAccept={() => loadMessagesList()} onCancel={() => loadMessagesList()}/>\n                            )}\n                            <div>\n                              {message.media && message.media.map((image, idx) => (\n                                <React.Fragment key={idx}>\n                                  <a href={MEDIA_DOWNLOAD_URL.replace(':id', image.id.toString())}>\n                                    <Image image={image} h={100} />\n                                  </a>\n                                </React.Fragment>\n                              ))}\n                            </div>\n                          </div>\n                        </div>\n                        <div className=\"clearfix\"></div>\n                      </div>\n                    );\n                  })}\n                </div>\n                <div className=\"message-form\">\n                  <form method=\"POST\"\n                    onSubmit={handleSubmitMessage(sendMessage)}\n                    className=\"w-100\"\n                    autoComplete=\"off\"\n                  >\n                    <div className=\"input-group\">\n                      <input type=\"text\" {...registerMessage('message')}\n                        className=\"form-control border-primary shadow-none rounded-0\"\n                        placeholder=\"Enter something\"\n                        autoFocus />\n                      <div className=\"input-group-append\" title=\"Create offer\" id=\"offer-button\">\n                        <button type=\"button\" className=\"btn btn-outline-danger mb-0\" onClick={() => setModal(true)}>\n                          <FontAwesomeIcon icon={faPencilAlt} /> Offer\n                        </button>\n                      </div>\n                      <div className=\"input-group-append\" title={uploadedFileName}>\n                        <label className=\"file-picker btn btn-outline-primary mb-0\">\n                          <FontAwesomeIcon icon={faPaperclip} />\n                          <input type=\"file\" {...registerMessage('file')} />\n                        </label>\n                      </div>\n                      <div className=\"input-group-append\">\n                        <button className=\"btn btn-outline-success rounded-0\"\n                          type=\"submit\"\n                          disabled={isMessageSending}>\n                          <FontAwesomeIcon icon={faPaperPlane} />\n                        </button>\n                      </div>\n                      <Tooltip placement=\"top\" isOpen={tooltipOpen} target=\"offer-button\" toggle={tooltipToggle}>\n                        Create offer\n                      </Tooltip>\n                    </div>\n                    <div>{errorsMessage.message && (\n                      <div className=\"alert alert-danger\">{errorsMessage.message.message}</div>\n                    )}</div>\n                  </form>\n                </div>\n              </>\n            )}\n          </div>\n        </div>\n      </div>\n      <Modal isOpen={modal} toggle={toggleModal} size=\"lg\" fade={false} backdrop=\"static\">\n        <ModalHeader toggle={toggleModal}>Create offer</ModalHeader>\n        <form onSubmit={handleSubmit(onCreateOffer)} action={CREATE_OFFER}>\n          <ModalBody>\n            <h3>Select a service</h3>\n            <Row>\n              {user?.seller?.services.map((service, index) => (\n                <div className=\"col-6\" key={index}>\n                  <label\n                    className={`m-0 p-0 mb-2 text-left btn-service btn${service === offerService ? ' active' : ''}`}\n                    onClick={() => setOfferService(service)}\n                  >\n                    <input type=\"radio\" {...register('serviceId')} className=\"d-none\" value={service.id} />\n                    <ServiceShort service={service} />\n                  </label>\n                </div>\n              ))}\n            </Row>\n            {errors.serviceId && (\n              <div className=\"text-danger\">{errors.serviceId.message}</div>\n            )}\n            <div className=\"form-group\">\n              <label htmlFor=\"description\">Description</label>\n              <textarea id=\"description\" className=\"form-control\" {...register('description', {required: true})} />\n              {errors.description && (\n                <div className=\"text-danger\">{errors.description.message}</div>\n              )}\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"delivery-days\">Delivery days</label>\n              <select id=\"delivery-days\" className=\"form-control\" {...register('delivery_duration', {required: true})}>\n                {_.range(30).map((item, index) => (\n                  <option value={index + 1}>{index + 1}</option>\n                ))}\n              </select>\n              {errors.duration && (\n                <div className=\"text-danger\">{errors.duration.message}</div>\n              )}\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"price\">Price</label>\n              <input type=\"number\" className=\"form-control\" {...register('price', {required: true})} />\n              {errors.price && (\n                <div className=\"text-danger\">{errors.price.message}</div>\n              )}\n            </div>\n          </ModalBody>\n          <ModalFooter>\n            <Button color=\"success\" type=\"submit\" disabled={creatingOffer}>Create offer</Button>\n          </ModalFooter>\n        </form>\n      </Modal>\n    </Layout>\n  );\n};","/var/www/html/fiverr_frontend/src/containers/dashboard/earnings.tsx",[],"/var/www/html/fiverr_frontend/src/api/exception/validation/validation.exception.ts",[],"/var/www/html/fiverr_frontend/src/api/model/media.ts",[],["352","353"],"/var/www/html/fiverr_frontend/src/typings.d.ts",["354"],"import React from 'react';\n\ndeclare global {\n  namespace JSX {\n    interface IntrinsicElements {\n      'TimeAgoElement': any; // The 'any' just for testing purposes\n    }\n  }\n}","/var/www/html/fiverr_frontend/src/components/service/service.short.tsx",[],"/var/www/html/fiverr_frontend/src/components/offer/offer.tsx",[],"/var/www/html/fiverr_frontend/src/api/exception/validation/validation.exception.factory.ts",[],"/var/www/html/fiverr_frontend/src/containers/dashboard/order/order.tsx",["355"],"import React, {FunctionComponent, useEffect, useState} from \"react\";\nimport {RouteComponentProps} from \"react-router\";\nimport {Order as OrderModel, OrderStates} from '../../../api/model/order';\nimport {jsonRequest} from \"../../../api/request/request\";\nimport {GET_ORDER} from \"../../../api/routing/routes/dashboard\";\nimport Layout from \"../../layout/layout\";\nimport {Link} from \"react-router-dom\";\nimport {ORDER_PAYMENT} from \"../../../routes\";\n\ninterface OrderProps extends RouteComponentProps<{id: string}>{\n\n}\n\nexport const Order: FunctionComponent<OrderProps> = (props) => {\n  \n  const [isLoading, setLoading] = useState(false);\n  const [order, setOrder] = useState<OrderModel>();\n  \n  useEffect(() => {\n    loadOrder(props.match.params.id);\n  }, [props.match.params.id]);\n  \n  const loadOrder = async (orderId: string) => {\n    setLoading(true);\n    try{\n      let response = await jsonRequest(GET_ORDER.replace(':id', orderId));\n      let json = await response.json();\n      setOrder(json.order);\n    }catch (e) {\n      throw e;\n    }finally {\n      setLoading(false);\n    }\n  };\n  \n  return (\n    <Layout>\n      <h1>Order# {order?.orderId} <small className=\"text-muted text-sm align-middle\">{order?.state?.toUpperCase()}</small></h1>\n      {order?.state?.toLocaleLowerCase() === OrderStates.PENDING && (\n        <div className=\"text-center border p-3 rounded\">\n          <div className=\"alert alert-warning\">Order is not yet started, please pay the order to start.</div>\n          <Link to={ORDER_PAYMENT.replace(':id', order.id)} className=\"btn btn-primary\">Make Payment</Link>\n        </div>\n      )}\n    </Layout>\n  );\n};","/var/www/html/fiverr_frontend/src/api/model/order.ts",[],"/var/www/html/fiverr_frontend/src/containers/dashboard/order/payment.tsx",["356","357"],"import React, {FunctionComponent, useCallback, useEffect, useState} from \"react\";\nimport {RouteComponentProps} from \"react-router\";\nimport {Order as OrderModel, OrderStates} from '../../../api/model/order';\nimport {jsonRequest} from \"../../../api/request/request\";\nimport {GET_ORDER} from \"../../../api/routing/routes/dashboard\";\nimport Layout from \"../../layout/layout\";\nimport {Link} from \"react-router-dom\";\nimport {SINGLE_ORDER} from \"../../../routes\";\nimport {loadStripe} from '@stripe/stripe-js';\nimport {\n  Elements,\n} from '@stripe/react-stripe-js';\nimport {StripePayment} from \"./stripe.payment\";\nimport {PaypalPayment} from \"./paypal.payment\";\n\ninterface OrderProps extends RouteComponentProps<{id: string}>{\n\n}\n\nexport const OrderPayment: FunctionComponent<OrderProps> = (props) => {\n  \n  const [isLoading, setLoading] = useState(false);\n  const [order, setOrder] = useState<OrderModel>();\n  const stripePromise = loadStripe('pk_test_6pRNASCoBOKtIshFeQd4XMUh');\n  \n  useEffect(() => {\n    loadOrder(props.match.params.id);\n  }, [props.match.params.id]);\n  \n  const loadOrder = async (orderId: string) => {\n    setLoading(true);\n    try{\n      let response = await jsonRequest(GET_ORDER.replace(':id', orderId));\n      let json = await response.json();\n      setOrder(json.order);\n    }catch (e) {\n      throw e;\n    }finally {\n      setLoading(false);\n    }\n  };\n  \n  return (\n    <Layout>\n      <Elements stripe={stripePromise}>\n        <h1>Order# {order?.orderId} <small className=\"text-muted text-sm align-middle\">{order?.state?.toUpperCase()}</small></h1>\n        {order?.state?.toLocaleLowerCase() === OrderStates.PENDING ? (\n          <div className=\"text-center\">\n            <div className=\"row mt-5\">\n              <div className=\"col text-center\">\n                <div className=\"border border-primary text-primary rounded-lg p-5\">\n                  <h3>\n                    Pay with {' '}\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"62\" height=\"25\">\n                      <path fill=\"#32325d\" d=\"M5 10.1c0-.6.6-.9 1.4-.9 1.2 0 2.8.4 4 1.1V6.5c-1.3-.5-2.7-.8-4-.8C3.2 5.7 1 7.4 1 10.3c0 4.4 6 3.6 6 5.6 0 .7-.6 1-1.5 1-1.3 0-3-.6-4.3-1.3v3.8c1.5.6 2.9.9 4.3.9 3.3 0 5.5-1.6 5.5-4.5.1-4.8-6-3.9-6-5.7zM29.9 20h4V6h-4v14zM16.3 2.7l-3.9.8v12.6c0 2.4 1.8 4.1 4.1 4.1 1.3 0 2.3-.2 2.8-.5v-3.2c-.5.2-3 .9-3-1.4V9.4h3V6h-3V2.7zm8.4 4.5L24.6 6H21v14h4v-9.5c1-1.2 2.7-1 3.2-.8V6c-.5-.2-2.5-.5-3.5 1.2zm5.2-2.3l4-.8V.8l-4 .8v3.3zM61.1 13c0-4.1-2-7.3-5.8-7.3s-6.1 3.2-6.1 7.3c0 4.8 2.7 7.2 6.6 7.2 1.9 0 3.3-.4 4.4-1.1V16c-1.1.6-2.3.9-3.9.9s-2.9-.6-3.1-2.5H61c.1-.2.1-1 .1-1.4zm-7.9-1.5c0-1.8 1.1-2.5 2.1-2.5s2 .7 2 2.5h-4.1zM42.7 5.7c-1.6 0-2.5.7-3.1 1.3l-.1-1h-3.6v18.5l4-.7v-4.5c.6.4 1.4 1 2.8 1 2.9 0 5.5-2.3 5.5-7.4-.1-4.6-2.7-7.2-5.5-7.2zm-1 11c-.9 0-1.5-.3-1.9-.8V10c.4-.5 1-.8 1.9-.8 1.5 0 2.5 1.6 2.5 3.7 0 2.2-1 3.8-2.5 3.8z\"/>\n                    </svg>\n                  </h3>\n                  <StripePayment/>\n                </div>\n              </div>\n              <div className=\"col text-center\">\n                <div className=\"border border-primary text-primary rounded-lg p-5\">\n                  <h3>Pay with <img src=\"https://www.paypalobjects.com/digitalassets/c/website/logo/full-text/pp_fc_hl.svg\" alt=\"PayPal\" width={100}/></h3>\n                  <PaypalPayment orderId={order.id}/>\n                </div>\n              </div>\n            </div>\n          </div>\n        ) : (\n          <>\n            <h1 className=\"text-center\">This order is already paid</h1>\n            <Link to={SINGLE_ORDER.replace(':id', order?.id)} className=\"btn btn-primary\">Back to Order</Link>\n          </>\n        )}\n      </Elements>\n    </Layout>\n  );\n};","/var/www/html/fiverr_frontend/src/containers/dashboard/order/stripe.payment.tsx",["358","359"],"import React, {FunctionComponent, useCallback, useState} from \"react\";\nimport {\n  CardElement,\n  useStripe,\n  useElements,\n} from '@stripe/react-stripe-js';\n\nexport const StripePayment = () => {\n  const stripe = useStripe();\n  const elements = useElements();\n  const [errors, setErrors] = useState<string|undefined>();\n  const [isLoading, setLoading] = useState(false);\n  \n  const handleSubmit = useCallback(async (event) => {\n    event.preventDefault();\n    setLoading(true);\n    setErrors(undefined);\n    if(stripe && elements) {\n      const {error, paymentMethod} = await stripe?.createPaymentMethod({\n        type: 'card',\n        card: elements.getElement(CardElement)!,\n      });\n      \n      setLoading(false);\n      \n      if(error){\n        setErrors(error.message);\n      }\n    }\n  }, [stripe, elements]);\n  \n  return (\n    <form onSubmit={handleSubmit}>\n      {errors && (\n        <div className=\"alert alert-danger text-left mb-3\">{errors}</div>\n      )}\n      <div className=\"my-4\">\n        <CardElement\n          options={{\n            style: {\n              base: {\n                fontSize: '16px',\n                color: '#424770',\n                '::placeholder': {\n                  color: '#aab7c4',\n                },\n              },\n              invalid: {\n                color: '#9e2146',\n              },\n            },\n          }}\n        />\n      </div>\n      <button type=\"submit\" className=\"btn btn-primary mt-3\" disabled={!stripe || isLoading}>\n        Pay with Stripe\n      </button>\n    </form>\n  );\n};","/var/www/html/fiverr_frontend/src/containers/dashboard/order/paypal.payment.tsx",[],"/var/www/html/fiverr_frontend/src/containers/dashboard/order/orders.tsx",["360"],"import React, {FunctionComponent, useEffect, useState} from 'react';\nimport Layout from \"../../layout/layout\";\nimport {Order as OrderModel} from \"../../../api/model/order\";\nimport {jsonRequest} from \"../../../api/request/request\";\nimport {ORDERS_LIST} from \"../../../api/routing/routes/dashboard\";\nimport {useSelector} from \"react-redux\";\nimport {getAuthorizedUser} from \"../../../duck/auth/auth.selector\";\nimport {useHistory} from \"react-router\";\nimport {SINGLE_ORDER} from \"../../../routes\";\nimport moment from \"moment\";\n\nexport interface OrdersProps {\n\n}\n\nexport const Orders: FunctionComponent<OrdersProps> = (props) => {\n  const [isLoading, setLoading] = useState(false);\n  const [orders, setOrders] = useState<OrderModel[]>([]);\n  const user = useSelector(getAuthorizedUser);\n  const history = useHistory();\n  \n  const loadOrders = async () => {\n    setLoading(true);\n    try {\n      let response = await jsonRequest(ORDERS_LIST);\n      let json = await response.json();\n      setOrders(json.orders);\n    } catch (e) {\n      throw e;\n    } finally {\n      setLoading(false);\n    }\n  };\n  \n  useEffect(() => {\n    loadOrders();\n  }, []);\n  \n  return (\n    <Layout>\n      <h1>Orders</h1>\n      <table className=\"table table-hover table-striped\">\n        <thead>\n        <tr>\n          <th>ID</th>\n          <th>Buyer/Seller</th>\n          <th>Service</th>\n          <th>Due on</th>\n          <th>Delivered at</th>\n          <th>Total</th>\n          <th>Notes</th>\n          <th>Status</th>\n        </tr>\n        </thead>\n        <tbody>\n        {orders.map(order => (\n          <tr onClick={() => history.push(SINGLE_ORDER.replace(':id', order.id))}>\n            <td>{order.orderId}</td>\n            <td>\n              {user?.buyer?.id === order.buyer.id ? 'Me' : order.buyer.displayName}\n              /\n              {user?.seller?.id === order.seller.id ? 'Me' : order.seller.displayName}\n            </td>\n            <td>{order.service!.title}</td>\n            <td title={order.deadline!}>{moment(order.deadline).fromNow()}</td>\n            <td>{order.completeAt}</td>\n            <td>{order.price}</td>\n            <td>{order.description}</td>\n            <td>{order.state}</td>\n          </tr>\n        ))}\n        </tbody>\n      </table>\n    </Layout>\n  );\n};","/var/www/html/fiverr_frontend/src/containers/dashboard/profile/profile.tsx",["361","362","363"],"import React, {FunctionComponent, useEffect, useState} from \"react\";\nimport Layout from \"../../layout/layout\";\nimport {useForm} from \"react-hook-form\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {getAuthorizedUser} from \"../../../duck/auth/auth.selector\";\nimport {User} from \"../../../api/model/user\";\nimport {Image} from \"../../../components/image/image\";\nimport {jsonRequest, request} from \"../../../api/request/request\";\nimport {PROFILE_UPDATE} from \"../../../api/routing/routes/dashboard\";\nimport {userAuthenticated} from \"../../../duck/auth/auth.action\";\nimport {ConstraintViolation} from \"../../../lib/validator/validation.result\";\n\ninterface FormValues extends User{\n  password?: string;\n  file?: Blob[];\n}\n\nexport const Profile: FunctionComponent = () => {\n  const user = useSelector(getAuthorizedUser);\n  \n  const {register, handleSubmit, reset, setError, formState: {errors}} = useForm();\n  const [isLoading, setLoading] = useState(false);\n  const dispatch = useDispatch();\n  \n  \n  useEffect(() => {\n    reset({\n      firstName: user?.firstName,\n      lastName: user?.lastName,\n      currentType: user?.currentType,\n      gender: user?.gender,\n      dateOfBirth: user?.dateOfBirth,\n      onlineStatus: user?.onlineStatus\n    });\n  }, [user]);\n  \n  const onSubmit = async (values: FormValues) => {\n    setLoading(true);\n    try {\n      let data = new FormData();\n      data.append('firstName', values.firstName);\n      data.append('lastName', values.lastName);\n      data.append('currentType', values.currentType);\n      if(values.gender) {\n        data.append('gender', values.gender);\n      }\n      data.append('dateOfBirth', values.dateOfBirth);\n      if(values.onlineStatus) {\n        data.append('onlineStatus', 'true');\n      }else{\n        data.append('onlineStatus', 'false');\n      }\n      if(values.password){\n        data.append('password', values.password);\n      }\n\n      if(values.file) {\n        data.append('file', values.file[0]);\n      }\n      let response = await request(PROFILE_UPDATE, {\n        method: 'POST',\n        body: data\n      });\n      \n      let json = await response.json();\n\n      dispatch(userAuthenticated(json.user));\n    }catch (exception) {\n      let expResponse = await exception.response.json();\n      if (expResponse.code === 422) {\n        if (expResponse.violations) {\n          expResponse.violations.map((error: ConstraintViolation) => {\n            setError(error.propertyPath, {\n              type: 'manual',\n              message: error.errorMessage\n            });\n          });\n        }\n      }\n      \n      throw exception;\n    }finally {\n      setLoading(false);\n    }\n  };\n  \n  return (\n    <Layout>\n      <h1>Profile</h1>\n      <form onSubmit={handleSubmit(onSubmit)} encType=\"multipart/form-data\">\n        <div className=\"row\">\n          <div className=\"col-9\">\n            <div className=\"form-group\">\n              <label htmlFor=\"firstname\">First name</label>\n              <input type=\"text\" {...register('firstName')} className={`form-control ${errors.firstName ? 'is-invalid' : ''}`} id={\"firstname\"} />\n              {errors.firstName && (\n                <div className=\"invalid-feedback\">\n                  {errors.firstName.message}\n                </div>\n              )}\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"lastname\">Last name</label>\n              <input type=\"text\" {...register('lastName')} className={`form-control ${errors.lastName ? 'is-invalid' : ''}`} id={\"lastname\"} />\n              {errors.lastName && (\n                <div className=\"invalid-feedback\">\n                  {errors.lastName.message}\n                </div>\n              )}\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"password\">Password</label>\n              <input type=\"password\" {...register('password')} className={`form-control ${errors.password ? 'is-invalid' : ''}`} id={\"password\"} />\n              {errors.password && (\n                <div className=\"invalid-feedback\">\n                  {errors.password.message}\n                </div>\n              )}\n            </div>\n  \n            <p>Default type</p>\n            <div className=\"form-check form-check-inline\">\n              <label htmlFor=\"seller\">\n                <input type=\"radio\" {...register('currentType')} value=\"seller\" id=\"seller\"/> Seller\n              </label>\n            </div>\n            <div className=\"form-check form-check-inline\">\n              <label htmlFor=\"buyer\">\n                <input type=\"radio\" {...register('currentType')} value=\"buyer\" id=\"buyer\"/> Buyer\n              </label>\n            </div>\n            {errors.currentType && (\n              <div className=\"invalid-feedback\">\n                {errors.currentType.message}\n              </div>\n            )}\n            <div className=\"form-group\">\n              <label htmlFor=\"gender\">Gender</label>\n              <select {...register('gender')} className={`form-control ${errors.gender ? 'is-invalid' : ''}`} id={\"gender\"}>\n                <option value=\"male\">Male</option>\n                <option value=\"female\">Female</option>\n              </select>\n              {errors.gender && (\n                <div className=\"invalid-feedback\">\n                  {errors.gender.message}\n                </div>\n              )}\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"dob\">Date of birth</label>\n              <input type=\"date\" {...register('dateOfBirth')} className={`form-control ${errors.dateOfBirth ? 'is-invalid' : ''}`} id={\"dob\"}/>\n              {errors.dateOfBirth && (\n                <div className=\"invalid-feedback\">\n                  {errors.dateOfBirth.message}\n                </div>\n              )}\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"status\">\n                <input type=\"checkbox\" {...register('onlineStatus')} id=\"status\"/> Online status\n              </label>\n            </div>\n            \n            <div className=\"form-group\">\n              <label htmlFor=\"file\">Profile picture</label>\n              <input type=\"file\" {...register('file')} className={`form-control ${errors.file ? 'is-invalid' : ''}`} id=\"file\"/>\n            </div>\n            {errors.file && (\n              <div className=\"invalid-feedback\">\n                {errors.file.message}\n              </div>\n            )}\n          </div>\n          <div className=\"col-3\">\n            <Image image={user?.profilePicture} />\n          </div>\n        </div>\n        \n        <button className=\"btn btn-primary\" type=\"submit\" disabled={isLoading}>Save</button>\n        \n      </form>\n    </Layout>\n  );\n};","/var/www/html/fiverr_frontend/src/containers/layout/navbar.tsx",["364"],"/var/www/html/fiverr_frontend/src/containers/dashboard/services/services.tsx",["365"],{"ruleId":"366","replacedBy":"367"},{"ruleId":"368","replacedBy":"369"},{"ruleId":"366","replacedBy":"367"},{"ruleId":"368","replacedBy":"369"},{"ruleId":"370","severity":1,"message":"371","line":12,"column":9,"nodeType":"372","messageId":"373","endLine":12,"endColumn":19},{"ruleId":"370","severity":1,"message":"374","line":13,"column":9,"nodeType":"372","messageId":"373","endLine":13,"endColumn":18},{"ruleId":"375","severity":1,"message":"376","line":45,"column":8,"nodeType":"377","endLine":45,"endColumn":10,"suggestions":"378"},{"ruleId":"370","severity":1,"message":"379","line":8,"column":9,"nodeType":"372","messageId":"373","endLine":8,"endColumn":24},{"ruleId":"370","severity":1,"message":"380","line":19,"column":10,"nodeType":"372","messageId":"373","endLine":19,"endColumn":22},{"ruleId":"370","severity":1,"message":"381","line":19,"column":24,"nodeType":"372","messageId":"373","endLine":19,"endColumn":32},{"ruleId":"370","severity":1,"message":"382","line":7,"column":8,"nodeType":"372","messageId":"373","endLine":7,"endColumn":16},{"ruleId":"370","severity":1,"message":"383","line":8,"column":8,"nodeType":"372","messageId":"373","endLine":8,"endColumn":15},{"ruleId":"370","severity":1,"message":"384","line":11,"column":9,"nodeType":"372","messageId":"373","endLine":11,"endColumn":28},{"ruleId":"370","severity":1,"message":"385","line":13,"column":8,"nodeType":"372","messageId":"373","endLine":13,"endColumn":17},{"ruleId":"370","severity":1,"message":"386","line":14,"column":9,"nodeType":"372","messageId":"373","endLine":14,"endColumn":14},{"ruleId":"375","severity":1,"message":"387","line":71,"column":6,"nodeType":"377","endLine":71,"endColumn":20,"suggestions":"388"},{"ruleId":"370","severity":1,"message":"389","line":2,"column":21,"nodeType":"372","messageId":"373","endLine":2,"endColumn":34},{"ruleId":"370","severity":1,"message":"390","line":4,"column":26,"nodeType":"372","messageId":"373","endLine":4,"endColumn":39},{"ruleId":"370","severity":1,"message":"385","line":5,"column":5,"nodeType":"372","messageId":"373","endLine":5,"endColumn":14},{"ruleId":"370","severity":1,"message":"386","line":5,"column":16,"nodeType":"372","messageId":"373","endLine":5,"endColumn":21},{"ruleId":"370","severity":1,"message":"391","line":28,"column":9,"nodeType":"372","messageId":"373","endLine":28,"endColumn":28},{"ruleId":"370","severity":1,"message":"392","line":44,"column":10,"nodeType":"372","messageId":"373","endLine":44,"endColumn":19},{"ruleId":"375","severity":1,"message":"393","line":133,"column":6,"nodeType":"377","endLine":133,"endColumn":8,"suggestions":"394"},{"ruleId":"395","severity":1,"message":"396","line":29,"column":13,"nodeType":"397","endLine":33,"endColumn":15},{"ruleId":"375","severity":1,"message":"398","line":22,"column":8,"nodeType":"377","endLine":22,"endColumn":22,"suggestions":"399"},{"ruleId":"370","severity":1,"message":"400","line":51,"column":10,"nodeType":"372","messageId":"373","endLine":51,"endColumn":21},{"ruleId":"375","severity":1,"message":"401","line":61,"column":6,"nodeType":"377","endLine":61,"endColumn":8,"suggestions":"402"},{"ruleId":"370","severity":1,"message":"403","line":37,"column":10,"nodeType":"372","messageId":"373","endLine":37,"endColumn":26},{"ruleId":"370","severity":1,"message":"404","line":38,"column":10,"nodeType":"372","messageId":"373","endLine":38,"endColumn":27},{"ruleId":"370","severity":1,"message":"405","line":43,"column":28,"nodeType":"372","messageId":"373","endLine":43,"endColumn":47},{"ruleId":"375","severity":1,"message":"406","line":91,"column":6,"nodeType":"377","endLine":91,"endColumn":20,"suggestions":"407"},{"ruleId":"408","severity":1,"message":"409","line":140,"column":67,"nodeType":"410","messageId":"411","endLine":140,"endColumn":69},{"ruleId":"375","severity":1,"message":"412","line":153,"column":6,"nodeType":"377","endLine":153,"endColumn":29,"suggestions":"413"},{"ruleId":"375","severity":1,"message":"414","line":157,"column":6,"nodeType":"377","endLine":157,"endColumn":29,"suggestions":"415"},{"ruleId":"408","severity":1,"message":"409","line":198,"column":67,"nodeType":"410","messageId":"411","endLine":198,"endColumn":69},{"ruleId":"375","severity":1,"message":"416","line":210,"column":6,"nodeType":"377","endLine":210,"endColumn":8,"suggestions":"417"},{"ruleId":"366","replacedBy":"418"},{"ruleId":"368","replacedBy":"419"},{"ruleId":"370","severity":1,"message":"420","line":1,"column":8,"nodeType":"372","messageId":"373","endLine":1,"endColumn":13},{"ruleId":"370","severity":1,"message":"421","line":16,"column":10,"nodeType":"372","messageId":"373","endLine":16,"endColumn":19},{"ruleId":"370","severity":1,"message":"422","line":1,"column":35,"nodeType":"372","messageId":"373","endLine":1,"endColumn":46},{"ruleId":"370","severity":1,"message":"421","line":22,"column":10,"nodeType":"372","messageId":"373","endLine":22,"endColumn":19},{"ruleId":"370","severity":1,"message":"423","line":1,"column":16,"nodeType":"372","messageId":"373","endLine":1,"endColumn":33},{"ruleId":"370","severity":1,"message":"424","line":19,"column":21,"nodeType":"372","messageId":"373","endLine":19,"endColumn":34},{"ruleId":"370","severity":1,"message":"421","line":17,"column":10,"nodeType":"372","messageId":"373","endLine":17,"endColumn":19},{"ruleId":"370","severity":1,"message":"425","line":8,"column":9,"nodeType":"372","messageId":"373","endLine":8,"endColumn":20},{"ruleId":"375","severity":1,"message":"426","line":35,"column":6,"nodeType":"377","endLine":35,"endColumn":12,"suggestions":"427"},{"ruleId":"408","severity":1,"message":"409","line":72,"column":67,"nodeType":"410","messageId":"411","endLine":72,"endColumn":69},{"ruleId":"370","severity":1,"message":"400","line":21,"column":10,"nodeType":"372","messageId":"373","endLine":21,"endColumn":21},{"ruleId":"370","severity":1,"message":"421","line":11,"column":10,"nodeType":"372","messageId":"373","endLine":11,"endColumn":19},"no-native-reassign",["428"],"no-negated-in-lhs",["429"],"@typescript-eslint/no-unused-vars","'useHistory' is defined but never used.","Identifier","unusedVar","'DASHBOARD' is defined but never used.","react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["430"],"'CATEGORIES_LIST' is defined but never used.","'handleSubmit' is assigned a value but never used.","'register' is assigned a value but never used.","'Services' is defined but never used.","'Sellers' is defined but never used.","'RouteComponentProps' is defined but never used.","'FormGroup' is defined but never used.","'Input' is defined but never used.","React Hook useEffect has a missing dependency: 'loadServices'. Either include it or remove the dependency array.",["431"],"'ListGroupItem' is defined but never used.","'SERVICES_LIST' is defined but never used.","'ValidationException' is defined but never used.","'modalType' is assigned a value but never used.","React Hook useCallback has missing dependencies: 'history' and 'toggleModal'. Either include them or remove the dependency array.",["432"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","React Hook useCallback has a missing dependency: 'history'. Either include it or remove the dependency array.",["433"],"'logoutState' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'logoutAction' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["434"],"'isThreadsLoading' is assigned a value but never used.","'isMessagesLoading' is assigned a value but never used.","'setUploadedFileName' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'loadMessagesList'. Either include it or remove the dependency array.",["435"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useCallback has missing dependencies: 'activeThread', 'resetMessage', 'scrollToBottom', and 'setErrorMessage'. Either include them or remove the dependency array.",["436"],"React Hook useEffect has a missing dependency: 'scrollToBottom'. Either include it or remove the dependency array.",["437"],"React Hook useCallback has missing dependencies: 'clearErrorsMessage', 'reset', and 'setError'. Either include them or remove the dependency array.",["438"],["428"],["429"],"'React' is defined but never used.","'isLoading' is assigned a value but never used.","'useCallback' is defined but never used.","'FunctionComponent' is defined but never used.","'paymentMethod' is assigned a value but never used.","'jsonRequest' is defined but never used.","React Hook useEffect has a missing dependency: 'reset'. Either include it or remove the dependency array.",["439"],"no-global-assign","no-unsafe-negation",{"desc":"440","fix":"441"},{"desc":"442","fix":"443"},{"desc":"444","fix":"445"},{"desc":"446","fix":"447"},{"desc":"448","fix":"449"},{"desc":"450","fix":"451"},{"desc":"452","fix":"453"},{"desc":"454","fix":"455"},{"desc":"456","fix":"457"},{"desc":"458","fix":"459"},"Update the dependencies array to be: [dispatch]",{"range":"460","text":"461"},"Update the dependencies array to be: [loadServices, searchParams]",{"range":"462","text":"463"},"Update the dependencies array to be: [history, toggleModal]",{"range":"464","text":"465"},"Update the dependencies array to be: [history, searchParams]",{"range":"466","text":"467"},"Update the dependencies array to be: [logoutAction, props]",{"range":"468","text":"469"},"Update the dependencies array to be: [activeThread, loadMessagesList]",{"range":"470","text":"471"},"Update the dependencies array to be: [activeThread, messagesList, offerId, resetMessage, scrollToBottom, setErrorMessage]",{"range":"472","text":"473"},"Update the dependencies array to be: [listRef, activeThread, scrollToBottom]",{"range":"474","text":"475"},"Update the dependencies array to be: [clearErrorsMessage, reset, setError]",{"range":"476","text":"477"},"Update the dependencies array to be: [reset, user]",{"range":"478","text":"479"},[1522,1524],"[dispatch]",[2161,2175],"[loadServices, searchParams]",[4211,4213],"[history, toggleModal]",[787,801],"[history, searchParams]",[2163,2165],"[logoutAction, props]",[3464,3478],"[activeThread, loadMessagesList]",[5155,5178],"[activeThread, messagesList, offerId, resetMessage, scrollToBottom, setErrorMessage]",[5231,5254],"[listRef, activeThread, scrollToBottom]",[6635,6637],"[clearErrorsMessage, reset, setError]",[1262,1268],"[reset, user]"]